{"swagger":"2.0","info":{"description":"The Ocean API allows EMR and RMS vendors to integrate Ocean capabilities to get seamless access to the Ocean clinical content platform and access to thousands of clinical forms. Your EMR will be able to leverage cloud-based services to collect data from patients at home (using Ocean Online) or in the waiting room (using Ocean Tablets).\n\n## Terms of Use\n\nThe Ocean API is a free and open API to help foster technology innovation for the good of the healthcare system and the clinicians and patients that depend on it. Please do not abuse this API. By continuing to read this document and use the APIs, you agree to code carefully and throttle requests reasonably so that you are not effectively launching a DoS attack on us. If we detect an unreasonable number of requests per minute for practical use, we will disable your account and/or blacklist your IP at our firewall, which will be inconvenient, counterproductive, annoying and distract all of us from doing useful work to help patients. CognisantMD reserves the right to block API use of abusers at any time and is not responsible for damages that might result.\n\n## API Principles\n\nThe Ocean API is designed to allow external parties to integrate with the Ocean platform simply and securely. The following principles were followed during development of the API:\n* [REST](http://en.wikipedia.org/wiki/Representational_state_transfer)ful design: standard HTTP verbs (GET, POST, PUT, DELETE, etc) and resource identifiers (URIs) with standard REST semantics (GET has no side effects, etc)\n* Formal, well defined API using standard HTTP response codes & consistent formats\n* JSON formatting of all responses\n* Stateless authentication\n* Client-side encryption of all PHI to maximize privacy/security in accordance with PHIPA\n* Available only via HTTPS to protect credentials and PHI\nTo supplement this document, Ocean provides a developer sandbox with a reference JavaScript implementation using the Ocean API at https://ocean.cognisantmd.com/public/api/sample.html. It may be helpful to download this code for reference while reading this guide.\n\n## API Location\n\nAll Ocean Service URLs are located under `/svc/v1/`. \nFor example, `https://ocean.cognisantmd.com/svc/v1/patients`\n\n# Security\n\nThe Ocean API is designed using a multi-layer approach to security to protect patient PHI.\nNote: more information on Ocean's [Privacy Policy](http://www.cognisantmd.com/privacy-policy/), security architecture, PIA support, and PHIPA-compliance is available upon request.\n\n## Protection of PHI\n\nAll PHI transmitted to and from Ocean is encrypted using unique, random symmetric keys. Furthermore, to ensure that not even Ocean support staff can decrypt the PHI, the keys are encrypted using the site-specific Shared Encryption Key, which is never transmitted to Ocean.\n\n## Transmission Security\n\nAll Ocean API calls are made via SSL (HTTPS scheme) to prevent visibility of data to outside parties.\n\n# Authentication\n\nOcean API uses stateless authentication. Credentials must be supplied on every API call. Credentials are transmitted via HTTP headers and consist of a site key, credential and site number. The credentials limit access to a single site within the Ocean platform and limit functionality to only those services available to the external integrations (ie. not all functionality available to a user logged into the Ocean Portal is accessible via API credentials and vice-versa). \n\nYour Ocean API credentials can be viewed in the 'Manage Credentials' section of the Ocean Admin tab.\n\n## Additional HTTP Headers (required)\n\n* `siteNum`: Your Ocean Site number\n* `siteKey`: Typically set to `OCEAN_API_SITEKEY`; it's the value displayed when obtaining your Ocean API secret (`siteCredential`) from the Ocean Admin tab.\n\n# Ocean PHI Encryption\n\nAll PHI transmitted to or from Ocean is encrypted using a unique one-time key. This key is further encrypted using the site-specific shared encryption key when stored or transmitted to/from Ocean. As a result, decryption of PHI can be a somewhat complicated process. To supplement this document, Ocean provides a developer sandbox with a reference JavaScript implementation using the Ocean Service API at https://ocean.cognisantmd.com/public/api/sample.html. To view the JavaScript code associated with the sample, visit the URL above, right click the browser window and click \"view page source\" or \"save as\" to view or download the sample code, respectively. Locate the code for the relevant encryption operation and you will be able to follow along with a working example.\n\n## Encrypting PHI for transmission to Ocean\n\n> See `encryptPatient()` in the API sample implementation for an example.\n\nThe API client is responsible for creating random one-time key and initialization vector values. These must be 16-byte random values. The patient data is then copied into the Patient structure below and transformed into a JSON string before encryption. The data is encrypted using the one-time key and initialization vector and AES encryption algorithm. The one-time key is then encrypted using the Ocean shared encryption key. The encrypted one-time key and initialization\nvector are set as headers for the patient POST call, while the encrypted patient data is transmitted in JSON format as the body of the POST.\n\n## Decrypting PHI received from Ocean\n\n> See `processPatientData()` in the API sample implementation for an example.\n\nFirst, the encrypted one-time key and initialization vector for the data to be decrypted must be retrieved from the appropriate HTTP response headers. In the JavaScript example, the cryptoJS library requires the data to be converted to a base 64 encoded array. Next, decrypt the patient's one-time key using the Ocean shared encryption key and initialization vector. Once the one-time key has been decrypted, the same initialization vector and the now decrypted one-time key can be used to decrypt the patient data to JSON format. Note that patient notes have a separate initialization vector for the one-time key and note data.\n\n## Encrypted Blocks\n\nAll encrypted data will be sent/received in the following format:\n```\n{\n  \"data\": <Base64-encoded encrypted data>\n  \"iv\": <Base64-encoded initialization vector>\n}\n```\nThe specific payloads contained within each encrypted block are documented below.\n\nFor examples of how to work with Encrypted Blocks, take a look at the [Sample Code](#tag/Sample-Code).","version":"1.0.1","title":"Ocean API Documentation","x-logo":{"url":"https://www.cognisantmd.com/wp-content/uploads/2014/09/IntegratedLogo-Web.png"}},"host":"test.cognisantmd.com","basePath":"/","tags":[{"name":"Event API","description":"The Ocean Event API allows you to create external services that respond to real-time events in Ocean. The Event API works in parallel with our Restful Ocean API - receive basic notifications of Ocean events, then call into the Ocean API for more information. To use the Event API, you must do two things: build a service capable of receiving Ocean events, then configure a Custom Integration in Ocean.  \n\n## Custom Integration\n\nYou can create a Custom Integration on your Ocean site, to tell us where to send events. For more information on creating a Custom Integration, [click here](https://support.cognisantmd.com/hc/en-us/articles/360034919811).\n\n> Note: Currently, the Event API **only** supports Patient Engagement (Beta) and Referral-related events.\n\n## Webhook Endpoint Validation\n\nAfter you have configured a Custom Integration with your 'Request Url', we'll attempt to validate the endpoint by sending a challenge with the following payload:\n\n```json\n{\n    \"type\": \"url_verification\",\n    \"challenge\": <random token>\n}\n```\n\nTo pass validation, respond with your own json payload, including the `challenge` from the original message.  \n\n## Event Structure\n\n### Payload\n\n#### Patient Engagement\n```json\n{\n    \"type\": <event type (listed below)>,\n    \"ref\": <unique identifier for the impacted Ocean patient>,\n    \"siteNum\": <Ocean site number that owns the targetted patient>,\n    \"customProperties\": {<Any properties that are relevant to the event>}\n}\n```\n\n#### eReferrals\n```json\n{\n    \"type\": <event type (listed below)>,\n    \"ref\": <unique identifier for the impacted Ocean referral>,\n    \"siteNum\": <Ocean site number that owns the targetted isting>,\n    \"user\": { <Clinician information of the Ocean user that invoked this event>\n        \"address\": {\n            \"city\": \"string\",\n            \"country\": \"string\",\n            \"email\": \"string\",\n            \"fax\": \"string\",\n            \"line1\": \"string\",\n            \"line2\": \"string\",\n            \"phone\": \"string\",\n            \"postalCode\": \"string\",\n            \"province\": \"string\",\n            \"website\": \"string\"\n        },\n        \"billingNum\": \"string\",\n        \"clinicianType\": \"string\",\n        \"firstName\": \"string\",\n        \"surname\": \"string\",\n        \"professionalId\": \"string\",\n        \"signature\": \"string\"\n    },\n    \"changeList\": [<The changes that this event is notifying about>]\n}\n```\n\n### Event Types\nThe following are currently supported event types, separated by the type of custom integration. By default, when you register new integrations in Ocean you will be subscribed to all of these events accordingly:\n#### Patient Engagement\n\n* `notify-patient-message-forms-completion` - when a patient completes online forms of a patient message\n* `notify-patient-note-added` - when a note is added to a patient from the tablet or through the Ocean Portal\n\n#### eReferrals\n\n* `notify-add-service-request` - a new referral has been sent to the receiving site\n* `notify-update-service-request` - an existing referral has been updated\n* `notify-add-appointment` - a referral appointment has been booked \n* `notify-update-appointment` - a referral appointment has been changed\n* `notify-update-status` - a referral status has changed\n* `notify-upstream-service-request` - a new referral has been sent from the sending site"},{"name":"Formats and Terminology","description":"## Data Format\n\nAll Ocean Service API domain objects, primitives and collections are delivered in standard JSON format, and use ISO 8601 combined date and time format. Times are specified to the millisecond, as `YYYY-MM-DDThh:mm:ss.mmm-TZ`, \n\neg. `2015-04-09T17:19:32.000-0400`\n\n## EMR Field Updates\n\nThe following is a list of field names used in the emrFieldUpdates object found in Ocean patient updates:\n* firstName\n* surname\n* preferredName\n* secondName\n* title\n* suffix\n* address (e.g. Address 1 line 1)\n* address2 (e.g. Address 1 line 2)\n* city\n* province\n* country\n* postalCode\n* addr2Line1\n* addr2Line2\n* addr2City\n* addr2Province\n* addr2Country\n* addr2Postal\n* birthDate\n* email\n* homePhone\n* businessPhone\n* businessPhoneExt\n* mobilePhone\n* insuranceNumber\n* chartNumber\n* emergencyContact\n* emergencyContactPhone\n* emergencyContactRelationship\n* emergencyContactIsPoA\n* sex\n* hn\n* hnProv\n* hnVC\n* hnExpiryDate\n* language\n* emailConsent\n\n## Glossary of Terms\n\n### External Patient Reference\n\nRefers to an external identifier associated with a patient in the Ocean platform. This is typical the unique patient identifier within the EMR. The Ocean Patient Reference number can be looked up using this value. The value must be alphanumeric.\n\n### Encrypted Health Number\n\nSince the patient's health number is protected PHI, it must be protected from unauthorized viewing. The health number is encrypted and decrypted using the same techniques as patient data. The health number should be encrypted and decrypted using the same key as the patient data. It is stored separately from the patient data to enable lookup by health number.\n\n### Initialization Vector\n\nRandom value used to initialize the cryptographic operation (encrypt or decrypt).\n\n### Ocean Shared Encryption Key\n\nThe Ocean Shared Encryption Key (sometimes referred to as the \"secret encryption key\") is a value that is entered when setting up your Ocean site for the first time. It's required for encryption/decryption of any PHI data stored in Ocean. This value is never transmitted to Ocean servers or third parties. The key should be kept in a secure location accessible only to trusted staff members.\n\n### One-time key\n\nEach piece of PHI stored in Ocean (patient data, notes, etc) is encrypted with a unique, random encryption key. This key is in turn encrypted using the Ocean Shared Encryption Key so that even Ocean support staff are incapable of decrypting the PHI.\n Modified October 19, 2017\n \n### PHI\n\nPersonal Health Information. This data must be protected from unauthorized disclosure using cryptographic tools.\n\n### Patient Pull Model\n\nThis is an alternative model for loading patient data into the Ocean portal. In this model, a \"stub\" patient is created in the Ocean portal using an external patient reference. The EMR integration mod ule polls for these stub patient identifiers and responds by uploading the patient data using the /patients/<patientRef> POST API. The Ocean patient reference is specified in the URL when uploading the patient data.\n\n### Patient Push Model\n\nThis is the typical model for loading patient data into the Ocean portal. In this model, third party applications integrating with Ocean \"push\", or upload, patient data using the /patients POST API.\n\n### Ocean Patient Reference\n\nRefers to the unique identifier associated with a patient in the Ocean platform. This number is a 3 (or more) digit positive integer.\n\n## Supported Health Services\n\n* `ABNORMAL_PREGNANCY_SCREENING_SUPPORT` - Abnormal Pregnancy Screening Support\n* `ACUPUNCTURE` - Acupuncture\n* `ACQUIRED_BRAIN_INJURY` - Acquired Brain Injury\n* `ADDICTIONS_ASSESSMENT_AND_REFERRAL` - Addictions Assessment & Referral\n* `ADOLESCENT_MEDICINE` - Adolescent Medicine\n* `ADOPTION_SUPPORT` - Adoption Support\n* `ADULT_DAY_PROGRAM` - Adult Day Program\n* `ADULT_INTENSIVE_SERVICES` - Adult Intensive Services\n* `AEFI` - Adverse Event Following Immunization\n* `ALCOHOLIC_SUPPORT_GROUPS` - Alcoholic Support Groups\n* `ALLERGY_AND_IMMUNOLOGY` - Allergy and Immunology\n* `AMBULATORY_BP` - Ambulatory Blood Pressure Monitoring\n* `AMPUTEE_SERVICES` - Amputee Services\n* `ANGER_DISORDERS` - Anger Disorders\n* `ARTHRITIS_SERVICES` - Arthritis Services\n* `ADHD_SERVICES` - ADHD Services\n* `ANAESTHESIA` - Anaesthesia\n* `AQUAFIT_PROGRAMS` - Aquafit Programs\n* `ARTERIAL_BLOOD_GASES` - Arterial Blood Gases\n* `ASSISTIVE_EQUIPMENT` - Assistive Equipment\n* `ASTHMA_EDUCATION` - Asthma Education\n* `AUGMENTATIVE_COMMUNICATION` - Augmentative Communication\n* `AUTISM_SPECTRUM_DISORDER_SERVICES` - Autism Spectrum Disorder Services\n* `ABI` - Arterial Segmental Pressures\n* `ASSISTED_DYING_INQUIRY_SUPPORT` - Assisted Dying Inquiry Support\n* `AUDIOLOGY` - Audiology\n* `BACK_PAIN` - Back Pain\n* `BACK_EPIDURAL_STEROID` - Back - Epidural Steroid Injection\n* `BACK_PROLOTHERAPY` - Back - Prolotherapy\n* `BARIATRIC_SURGERY` - Bariatric Surgery\n* `BEREAVEMENT_SUPPORT` - Bereavement Support\n* `BIOPHYSICAL_PROFILE` - Biophysical Profile\n* `BIRTH_CONTROL` - Family Planning\n* `BLIND_OR_LOW_VISION_REHABILITATION` - Blindness or Low Vision Rehabilitation\n* `BLOOD_DONOR_CLINIC` - Blood Donor Clinic\n* `BONE_MINERAL_DENSITY` - Bone Mineral Density\n* `BONE_SCAN` - Bone Scan\n* `BONE_MARROW_ASPIRATION` - Bone Marrow Aspiration\n* `BOTOX` - Botox Injections\n* `BOTOX_CERVICAL_DYSTONIA` - Botox Injections - Cervical Dystonia\n* `BRACING` - Bracing\n* `BREASTFEEDING` - Breastfeeding Support Services\n* `BREAST_CLINIC` - Breast Clinic\n* `BREAST_ULTRASOUND` - Breast Ultrasound\n* `BRONCHIAL_CHALLENGE` - Bronchial Challenge\n* `BRONCHOSCOPY` - Bronchoscopy\n* `CARDIAC_REHAB` - Supervised Exercise Rehabilitation - Cardiovascular\n* `CARDIAC_STRESS_TESTING` - Cardiac Stress Testing\n* `CARDIOLOGY` - Cardiology\n* `CARDIOLOGY_SERVICES` - Cardiology Services\n* `CARDIOVASCULAR_SURGERY` - Cardiovascular Surgery\n* `CARE_COORDINATION` - Care Coordination\n* `CATARACT_CARE` - Cataract Care\n* `CATARACT_SURGERY` - Cataract Surgery\n* `CENTRAL_VENOUS_CATHETER_INSERTION` - Central Venous Catheter Insertion\n* `CHILDRENS_AID` - Children's Aid\n* `CIRCUMCISION` - Circumcision\n* `COMMUNITY_HEALTH_CENTRE` - Community Health Centre\n* `CONCUSSION_MANAGEMENT` - Concussion Management\n* `CORE_NEEDLE_BIOPSY` - Core Needle Biopsy\n* `CHILD_DEVELOPMENT_SERVICE_NAVIGATION` - Child Development Service Navigation\n* `CHIROPRACTIC` - Chiropractic\n* `CHRONIC_DISEASE_SELF_MANAGEMENT` - Chronic Disease Self-Management\n* `CHRONIC_PAIN_SELF_MANAGEMENT` - Chronic Pain Self-Management\n* `COLONOSCOPY` - Colonoscopy\n* `COLORECTAL_SCREENING` - Colorectal Screening\n* `COMPOUNDING_PHARMACY` - Compounding Pharmacy\n* `COMMUNITY_SUPPORT_SERVICES` - Community Support Services\n* `CONVALESCENT_CARE` - Convalescent Care\n* `CORD_BLOOD_SERVICES` - Cord Blood Services\n* `COSMETICS` - Cosmetics\n* `COSMETIC_SURGERY` - Cosmetic Surgery\n* `COUNSELING` - Counseling\n* `COLPOSCOPY` - Colposcopy\n* `CT` - CT\n* `CYSTOSCOPY` - Cystoscopy\n* `DEMENTIA_SUPPORT` - Dementia Support Services\n* `DENTAL_HYGIENE` - Dental Hygiene\n* `DENTISTRY` - Dentistry\n* `DENTISTRY_LOW_COST` - Dentistry (Subsidized or Free)\n* `DENTAL_SURGERY` - Dental Surgery\n* `DERMATOLOGY` - Dermatology\n* `DEVELOPMENTAL_AND_DISABILITY` - Developmental and Disability Services\n* `DIABETES_EDUCATION` - Diabetes Education\n* `DIABETES_SPECIALIST_MANAGEMENT` - Diabetes Specialist Management\n* `DIABETES_SELF_MANAGEMENT` - Diabetes Self-Management\n* `DIAGNOSTIC_IMAGING` - Diagnostic Imaging\n* `DIETITIAN` - Dietitian / Nutrition\n* `DRIVING_SERVICES` - Driving Services\n* `DRUG_SAFETY_TESTING` - Drug Safety Testing\n* `EARLY_PREGNANCY_LOSS` - Early Pregnancy Loss\n* `EARLY_PSYCHOSIS_INTERVENTION` - Early Psychosis Intervention\n* `EATING_DISORDERS_PROGRAM` - Eating Disorders\n* `ECG` - ECG\n* `ECHOCARDIOGRAM` - Echocardiogram\n* `EEG` - EEG\n* `EMG` - EMG\n* `EMERGENCY_DEPARTMENT` - Emergency Department\n* `EMERGENCY_MEDICINE` - Emergency Medicine\n* `EMERGENCY_SHELTER` - Emergency Shelter\n* `ENDOCRINOLOGY` - Endocrinology\n* `END_OF_LIFE_CARE` - End-of-life care\n* `ENDOMETRIAL_BIOPSY` - Endometrial Biopsy\n* `ENDOSCOPY` - Endoscopy\n* `ERCP` - Endoscopic retrograde cholangiopancreatography (ERCP)\n* `EXERCISE_OXIMETRY` - Exercise Oximetry\n* `FALLS_PREVENTION` - Falls Prevention\n* `FAMILY_MEDICINE` - Family Medicine\n* `FAMILY_SERVICES` - Family Services\n* `FASD_SERVICES` - FASD Services\n* `FEEDING_SERVICES` - Feeding Services\n* `FERTILITY` - Fertility\n* `FIBROMYALGIA` - Fibromyalgia\n* `FINE_NEEDLE_ASPIRATION` - Fine Needle Aspiration\n* `FIT_POSITIVE_TESTING` - FIT-Positive Testing\n* `FLEXIBLE_SIGMOIDOSCOPY` - Flexible Sigmoidoscopy\n* `FLUOROSCOPY` - Fluoroscopy\n* `FOOTCARE_SELF_MANAGEMENT` - Foot Care Self-Management\n* `FOOTCARE_NURSING` - Foot Care Nursing\n* `FORENSICS` - Forensics\n* `FORENSIC_PSYCHIATRY` - Forensic Psychiatry\n* `FRACTURE_CLINIC` - Fracture Clinic\n* `FRIENDLY_VISITING` - Friendly Visiting\n* `GASTROENTEROLOGY` - Gastroenterology\n* `GASTRIC_EMPTYING_STUDY` - Gastric Emptying Study\n* `GAMBLING_ADDICTION_ASSISTANCE` - Gambling Addiction Assistance\n* `GENDER_SERVICES` - Gender Services\n* `GENETICS` - Genetics\n* `GENITOURINARY_SURGERY` - Genitourinary Surgery\n* `GERIATRICS` - Geriatrics\n* `GERIATRIC_BEHAVIOUR` - Geriatric Behaviour\n* `GERIATRIC_MEDICINE` - Geriatric Medicine\n* `GERIATRIC_MEDICINE_RISK_CONSULTATION` - Geriatric Medicine Risk Consultation\n* `GERIATRIC_PSYCHIATRY` - Geriatric Psychiatry\n* `GERIATRIC_MENTAL_HEALTH` - Geriatric Mental Health\n* `GOVERNMENT_SERVICE_OFFICE` - Government Service Office\n* `GROUP_DINING` - Group Dining\n* `GROUP_EXERCISE_AND_FITNESS` - Group Exercise/Fitness\n* `GYNECOLOGY` - Gynecology\n* `GYNECOLOGIC_ONCOLOGY` - Gynecologic Oncology\n* `HAIR_REMOVAL` - Hair Removal\n* `HEADACHE_MEDICINE` - Headache Medicine\n* `HEALTHCARE_NAVIGATION_SERVICE` - Healthcare Navigation Service\n* `HEALTH_EDUCATION_CLASSES` - Health Education Class\n* `HEALTH_EDUCATION_CLASSES_STROKE` - Health Education Class - Stroke\n* `HEALTH_EDUCATION_CLASSES_POSTURE` - Health Education Class - Posture\n* `HEARING_LOSS_OR_DEAF_SUPPORT` - Hearing Loss/Deaf Support\n* `HEMATOLOGY` - Hematology\n* `HEPATOLOGY` - Hepatology\n* `HERNIA_REPAIR` - Hernia Repair\n* `HIV_MEDICINE` - HIV Medicine\n* `HOLTER_MONITORING` - Ambulatory ECG Monitoring\n* `HOME_HEALTHCARE` - Home Healthcare Products\n* `HOME_MAINTENANCE_AND_REPAIR` - Home Maintenance & Repair\n* `HOMECARE_SERVICES` - Homecare Services\n* `HOME_AND_COMMUNITY_CARE` - Home and Community Care\n* `HOSPICE` - Hospice\n* `HOSPITAL` - Hospital\n* `HOSPITALIST` - Hospital Medicine\n* `HOUSEKEEPING` - Housekeeping\n* `HOUSING_AND_HOMELESSNESS_SERVICES` - Housing and Homelessness Services\n* `HYDROTHERAPY` - Hydrotherapy\n* `HYPERBARIC_THERAPY` - Hyperbaric Therapy\n* `IMAGING_GUIDED_NEEDLE_BIOPSY` - Imaging-Guided Needle Biopsy\n* `IMMUNIZATION_CLINIC` - Immunization Clinic\n* `INDEPENDENT_LIVING_SKILLS_TRAINING` - Independent Living Skills Training\n* `INFECTIOUS_DISEASE` - Infectious Disease\n* `INTERNAL_MEDICINE` - Internal Medicine\n* `INTENSIVE_CARE_MEDICINE` - Intensive Care Medicine\n* `INTENSIVE_GERIATRIC_SERVICE_WORKER` - Intensive Geriatric Service Worker\n* `INTRAMUSCULAR_STIMULATION` - Intramuscular Stimulation\n* `INTRAVENOUS_IRON_THERAPY` - Intravenous Iron Therapy\n* `IUD` - Intrauterine Device Insertion (IUD)\n* `LABORATORY` - Laboratory\n* `LACTATION_CONSULTANT` - Lactation Consultant\n* `LASER_EYE_SURGERY` - Laser Eye Surgery\n* `LASER_SERVICES` - Laser Services\n* `LASER_HAIR_REMOVAL` - Laser Hair Removal\n* `LASER_TATTOO_REMOVAL` - Laser Tattoo Removal\n* `LASER_WART_REMOVAL` - Laser Wart Removal\n* `LONG_TERM_CARE_ASSESSMENT` - Long Term Care Assessment\n* `LUMBAR_PUNCTURE` - Lumbar Puncture\n* `LEGAL_SERVICES` - Legal Services\n* `LIQUID_NITROGEN` - Liquid Nitrogen\n* `LLS_CHIROPODY_PODIATRY` - Lower Limb Services, Chiropody or Podiatry\n* `LONG_TERM_CARE` - Long-Term Care Home\n* `LOW_BACK_PAIN` - Low Back Pain\n* `MAMMOGRAPHY` - Mammography\n* `MASSAGE_THERAPY` - Massage Therapy\n* `MATERNAL_FETAL_MEDICINE` - Maternal Fetal Medicine\n* `MEAL_SERVICES` - Meal Services\n* `MEDICAL_MARIJUANA` - Medical Marijuana\n* `MEDICAL_MICROBIOLOGY` - Medical Microbiology\n* `MEDICAL_BIOCHEMISTRY` - Medical Biochemistry\n* `MEMORY_CLINIC` - Memory Clinic\n* `MENS_HEALTH` - Men's Health\n* `MENTAL_HEALTH_ASSESSMENT_AND_REFERRAL` - Mental Health Assessment & Referral\n* `MIDWIFERY` - Midwifery\n* `MISCELLANEOUS` - Miscellaneous\n* `MINOR_SURGICAL_PROCEDURES` - Minor Surgical Procedures\n* `MOBILITY_SERVICES` - Mobility Services\n* `MOOD_DISORDER_AND_ANXIETY_SUPPORT_GROUP` - Mood Disorder and Anxiety\n* `MRI` - MRI\n* `MUGA` - MUGA Scan\n* `MULTI_DISCIPLINARY_ASSESSMENT_AND_MANAGEMENT_ADULT` - Multi-Disciplinary Assessment and Management - Adult\n* `MULTI_DISCIPLINARY_ASSESSMENT_AND_MANAGEMENT_PEDIATRIC` - Multi-Disciplinary Assessment and Management - Pediatric\n* `MULTI_USE_RECREATION_CENTRE` - Multi-Use Recreation Centre\n* `MULTIPLE_SCLEROSIS` - Multiple Sclerosis\n* `MUSCULOSKELETAL_REHAB` - Musculoskeletal Rehabilitation\n* `MYOCARDIAL_PERFUSION_STUDY` - Myocardial Perfusion Study\n* `NATUROPATHY` - Naturopathy\n* `NEONATOLOGY` - Neonatology\n* `NEPHROLOGY` - Nephrology\n* `NEUROLOGY` - Neurology\n* `NEUROLOGY_SERVICES` - Neurology Services\n* `NEURORADIOLOGY` - Neuroradiology\n* `NEUROREHABILITATION` - Neurorehabilitation\n* `NEUROSURGERY` - Neurosurgery\n* `NERVE_BLOCK` - Nerve Block\n* `NUCLEAR_MEDICINE` - Nuclear Medicine\n* `NURSE_PRACTITIONER` - Nurse Practitioner\n* `NURSING` - Nursing\n* `NUTRITIONAL_COUNSELING_WORKSHOP` - Nutritional Counseling Workshop\n* `OBSP` - Ontario Breast Screening Program (OBSP)\n* `OBSTETRICS` - Obstetrics\n* `OBSTETRICAL_3D_ULTRASOUND` - Obstetrical 3D Ultrasound\n* `OBSTETRICAL_ULTRASOUND` - Obstetrical Ultrasound\n* `OCCUPATIONAL_HEALTH` - Occupational Health Clinic\n* `OCCUPATIONAL_MEDICINE` - Occupational Medicine\n* `OCCUPATIONAL_THERAPY` - Occupational Therapy\n* `ONCOLOGY` - Medical Oncology\n* `ONTARIO_ECONSULT` - Ontario eConsult\n* `OPHTHALMOLOGY` - Ophthalmology\n* `OPTOMETRY` - Optometry\n* `OROFACIAL_MEDICINE` - Orofacial Medicine\n* `ORTHOPEDICS` - Orthopedics\n* `ORTHOPEDIC_SURGEON_ELBOW` - Orthopedics: Elbow\n* `ORTHOPEDIC_SURGEON_FOOT_AND_ANKLE` - Orthopedics: Foot & Ankle\n* `ORTHOPEDIC_SURGEON_HAND` - Orthopedics: Hand\n* `ORTHOPEDIC_SURGEON_HIP` - Orthopedics: Hip\n* `ORTHOPEDIC_SURGEON_KNEE` - Orthopedics: Knee\n* `ORTHOPEDIC_SURGEON_SHOULDER` - Orthopedics: Shoulder\n* `ORTHOPEDIC_SURGEON_SPINE` - Orthopedics: Spine\n* `ORTHOPEDIC_SURGEON_WRIST` - Orthopedics: Wrist\n* `ORTHOTICS` - Orthotics\n* `ORTHODONTICS` - Orthodontics\n* `OSTEOPATHY` - Osteopathy\n* `OTOLARYNGOLOGY` - Otolaryngology\n* `PAIN_MANAGEMENT` - Pain Management\n* `PARACENTESIS` - Paracentesis\n* `PALLIATIVE_CARE` - Palliative Care Specialist\n* `PALLIATIVE_CARE_SERVICES` - Palliative Care Services\n* `PALLIATIVE_COMMUNITY_PHYSICIAN` - Palliative Community Physician\n* `PALLIATIVE_HOMECARE` - Palliative Homecare\n* `PAP_TESTING` - Pap Testing\n* `PATHOLOGY` - Pathology\n* `PATIENT_SELF_ADVOCACY_COUNSELING` - Patient Self-Advocacy Counseling\n* `PEDIATRIC_ALLERGY` - Pediatric Allergy\n* `PEDIATRIC_CARDIOLOGY` - Pediatric Cardiology\n* `PEDIATRIC_DENTISTRY` - Pediatric Dentistry\n* `PEDIATRIC_DERMATOLOGY` - Pediatric Dermatology\n* `PEDIATRIC_DEVELOPMENTAL` - Pediatric Developmental\n* `PEDIATRIC_EMERGENCY` - Pediatric Emergency Medicine\n* `PEDIATRIC_ENDOCRINOLOGY` - Pediatric Endocrinology\n* `PEDIATRIC_GASTROENTEROLOGY` - Pediatric Gastroenterology\n* `PEDIATRIC_HEMATOLOGY` - Pediatric Hematology\n* `PEDIATRIC_INFECTIOUS_DISEASE` - Pediatric Infectious Disease\n* `PEDIATRIC_LABORATORY` - Pediatric Laboratory\n* `PEDIATRIC_NEPHROLOGY` - Pediatric Nephrology\n* `PEDIATRIC_NEUROLOGY` - Pediatric Neurology\n* `PEDIATRIC_ONCOLOGY` - Pediatric Oncology\n* `PEDIATRIC_OPHTHALMOLOGY` - Pediatric Ophthalmology\n* `PEDIATRIC_ORTHOPEDICS` - Pediatric Orthopedics\n* `PEDIATRIC_OTOLARYNGOLOGY` - Pediatric Otolaryngology\n* `PEDIATRIC_PRIMARY_CARE` - Pediatric Primary Care\n* `PEDIATRIC_PSYCHIATRY` - Pediatric Psychiatry\n* `PEDIATRIC_PSYCHOLOGY` - Pediatric Psychology\n* `PEDIATRIC_RADIOLOGY` - Pediatric Radiology\n* `PEDIATRIC_RESPIROLOGY` - Pediatric Respirology\n* `PEDIATRIC_RHEUMATOLOGY` - Pediatric Rheumatology\n* `PEDIATRIC_SURGERY` - Pediatric General Surgery\n* `PEDIATRIC_UROLOGY` - Pediatric Urology\n* `PEDIATRICS` - Pediatrics\n* `PELVIC_FLOOR_PHYSIOTHERAPY` - Pelvic Floor Physiotherapy\n* `PERIOCULAR_LESIONS` - Periocular Lesions\n* `PERIODONTIST` - Periodontistry\n* `PERSONAL_CARE` - Personal Care\n* `PET_SCAN` - PET Scan\n* `PHARMACY` - Pharmacy\n* `PHARMACIST` - Pharmacist\n* `PHYSIOTHERAPY` - Physiotherapy\n* `PHYSIATRY` - Physiatry\n* `PLASTIC_SURGERY` - Plastic Surgery\n* `POSTNATAL_CARE` - Postnatal Care\n* `PREGNANCY_COUNSELING` - Pregnancy Counseling\n* `PRENATAL_CARE` - Prenatal Care\n* `PRENATAL_SCREENING` - Prenatal Screening\n* `PREOPERATIVE_CLINIC` - Preoperative Clinic\n* `PSYCHIATRY` - Psychiatry\n* `PSYCHOLOGY` - Psychology\n* `PSYCHOTIC_DISORDERS` - Psychotic Disorders\n* `PUBLIC_HEALTH` - Public Health\n* `PULMONARY_FUNCTION_TESTING` - Pulmonary Function Testing\n* `RADIATION_ONCOLOGY` - Radiation Oncology\n* `RADIOLOGY` - Radiology\n* `RADIOFREQUENCY_ABLATION` - Radiofrequency Ablation\n* `REFUGEE_CARE` - Refugee Care\n* `REGISTERED_PSYCHOTHERAPY` - Registered Psychotherapy\n* `REMOTE_PATIENT_MONITORING` - Remote Patient Monitoring\n* `RESPIRATORY_THERAPY` - Respiratory Therapy\n* `RESPIROLOGY` - Respirology\n* `RESPIROLOGY_SERVICES` - Respirology Services\n* `RESPITE_CARE` - Respite Care\n* `RETINA_CARE` - Retina Care\n* `RHEUMATOLOGY` - Rheumatology\n* `RIDES_AND_TRANSPORTATION` - Rides & Transportation\n* `RTMS` - rTMS\n* `SENIOR_COMMUNITY_CENTRE` - Senior Community Centre\n* `SENIOR_EXERCISE` - Seniors Gentle Exercise Class\n* `SENIOR_EXERCISE_IN_HOME` - Seniors Gentle Exercise (In-Home)\n* `SEX_AND_LOVE_ADDICTION_ASSISTANCE` - Sex/Love Addiction Counseling\n* `SEXUAL_HEALTH_THERAPY` - Sexual Health\n* `SEXUAL_ABUSE_TREATMENT` - Sexual Abuse Treatment\n* `SEXUAL_BEHAVIOURS` - Sexual Behaviours\n* `SHOPPING_ASSISTANCE` - Shopping Assistance\n* `SPECIALTY_DRUG_PATIENT_SUPPORT_PROGRAM` - Specialty Drug Patient Support Program\n* `SPINAL_CORD_INJURY` - Spinal Cord Injury Support\n* `SPIROMETRY` - Spirometry\n* `SUPERVISED_REHABILITATION_EXERCISE` - Supervised Rehabilitation Exercise\n* `SUPERVISED_REHABILITATION_EXERCISE_DIABETES` - Supervised Rehabilitation Exercise - Diabetes\n* `SUPERVISED_REHABILITATION_EXERCISE_NEUROLOGICAL` - Supervised Rehabilitation Exercise - Neurological\n* `SUPERVISED_REHABILITATION_EXERCISE_GENERAL_FITNESS` - Supervised Rehabilitation Exercise - General Fitness\n* `SUPERVISED_REHABILITATION_EXERCISE_CHRONIC_DISEASE` - Supervised Rehabilitation Exercise - Chronic Disease\n* `STI_CLINIC` - STI Clinic\n* `SLEEP_MEDICINE` - Sleep Medicine\n* `SMALL_BOWEL_FOLLOW_THROUGH` - Small Bowel Follow-Through\n* `SMOKING_CESSATION` - Smoking Cessation Therapy\n* `SOCIAL_WORK` - Social Work\n* `SONOHYSTEROGRAM` - Sonohysterogram\n* `SPASTICITY_MANAGEMENT` - Spasticity Management\n* `SPEECH_THERAPY` - Speech Therapy / Speech Language Pathology\n* `SPIRITUAL_CARE` - Spiritual Care\n* `SPORT_THERAPY` - Sport Therapy\n* `SPORTS_MEDICINE_SPECIALIST` - Sports Medicine Specialist\n* `STROKE_CARE` - Stroke Care\n* `ADDICTIONS` - Substance Use Disorders\n* `SUPPLIES_DELIVERY` - Supplies Delivery\n* `SUPPORT_GROUP` - Support Group\n* `SUPPORTIVE_HOUSING` - Supportive Housing\n* `SURGERY` - General Surgery\n* `SURGICAL_BIOPSY` - Surgery: Biopsy\n* `SURGERY_BRACHIAL_PLEXUS` - Surgery: Brachial Plexus\n* `SURGERY_CERVICAL_SPINE` - Surgery: Cervical Spine\n* `SURGERY_BRAIN` - Surgery: Brain\n* `SURGERY_COLORECTAL` - Surgery: Colorectal\n* `SURGERY_LUMBAR_SPINE` - Surgery: Lumbosacral Spine\n* `SURGERY_THORACIC_OUTLET_SYNDROME` - Surgery: Thoracic Outlet Syndrome\n* `SURGERY_THORACIC_SPINE` - Surgery: Thoracic Spine\n* `SURGERY_ANKLE` - Surgery: Ankle\n* `SURGERY_ANKLE_TOTAL_ARTHROPLASTY` - Surgery: Ankle - Total Arthroplasty\n* `SURGERY_ANKLE_LCL` - Surgery: Ankle - LCL\n* `SURGERY_ELBOW` - Surgery: Elbow\n* `SURGERY_WRIST` - Surgery: Wrist\n* `SURGERY_WRIST_OSTEOTOMY` - Surgery: Wrist - Osteotomy\n* `SURGERY_WRIST_DE_QUERVAINS` - Surgery: Wrist - De Quervain's Tenosynovitis Repair\n* `SURGERY_ELBOW_TOTAL_ARTHROPLASTY` - Surgery: Elbow - Total Arthroplasty\n* `SURGERY_TENNIS_ELBOW` - Surgery: Tennis Elbow\n* `SURGERY_FOOT` - Surgery: Foot\n* `SURGERY_FOOT_BUNION` - Surgery: Foot - Bunion\n* `SURGERY_FOOT_HAMMERTOE` - Surgery: Foot - Hammertoe\n* `SURGERY_FOOT_MTP_ARTHROPLASTY` - Surgery: Foot - Metatarsophalangeal Arthroplasty\n* `SURGERY_HAND` - Surgery: Hand\n* `SURGERY_HAND_DUPUYTRENS` - Surgery: Hand - Dupuytren's Contracture\n* `SURGERY_HAND_CARPAL_TUNNEL` - Surgery: Hand - Carpal Tunnel Syndrome\n* `SURGERY_HAND_TRIGGER_FINGER_RELEASE` - Surgery: Hand - Trigger Finger Release\n* `SURGERY_HAND_SMALL_JOINT_ARTHROPLASTY` - Surgery: Hand - Small Joint Arthroplasty\n* `SURGERY_HIP_ARTHROPLASTY` - Surgery: Hip - Total Arthroplasty\n* `SURGERY_KNEE_ACL` - Surgery: Knee - ACL Reconstruction\n* `SURGERY_KNEE_LCL` - Surgery: Knee - LCL Reconstruction\n* `SURGERY_KNEE_ARTHROSCOPY` - Surgery: Knee - Arthroscopy\n* `SURGERY_KNEE_TOTAL_ARTHROPLASTY` - Surgery: Knee - Total Arthroplasty\n* `SURGERY_SHOULDER_ARTHROSCOPY` - Surgery: Shoulder - Arthroscopy\n* `SURGERY_SHOULDER_OPEN_REPAIR_ROTATOR_CUFF` - Surgery: Shoulder - Open Repair Rotator Cuff\n* `SURGERY_SHOULDER_TOTAL_ARTHROPLASTY` - Surgery: Shoulder - Total Arthroplasty\n* `SURGERY_TOTAL_REVERSE_ARTHROPLASTY` - Surgery: Shoulder - Total Reverse Arthroplasty\n* `SURGICAL_ONCOLOGY` - Surgical Oncology\n* `TELEPHONE_REASSURANCE_AND_SAFETY_CHECKS` - Telephone Reassurance & Safety Checks\n* `THERAPEUTIC_RADIOLOGY` - Therapeutic/Interventional Radiology\n* `THORACIC_SURGERY` - Thoracic Surgery\n* `THORACENTESIS` - Thoracentesis\n* `THROMBOSIS_DVT_VTE_CARE` - Thrombosis / DVT / VTE Care\n* `THYROID_BIOPSY` - Thyroid Biopsy\n* `TILT_TABLE_TESTING` - Tilt Table Testing\n* `TONGUE_TIE_RELEASE` - Tongue Tie Release\n* `TRADITIONAL_CHINESE_MEDICINE` - Traditional Chinese Medicine\n* `TRANSFUSION_MEDICINE` - Transfusion Medicine\n* `TRANSGENDER_SERVICES` - Transgender Services\n* `TRAVEL_MEDICINE` - Travel Medicine\n* `ULTRASOUND` - Ultrasound\n* `UNPLANNED_PREGNANCY_SUPPORT` - Unplanned Pregnancy Support\n* `UPPER_GI_SERIES` - Upper GI Series\n* `URGENT_CARE_CLINIC` - Urgent Care Clinic\n* `UROLOGY` - Urology\n* `URODYNAMICS` - Urodynamic Testing\n* `VARICOSE_VEIN_TREATMENT` - Varicose Vein Treatment\n* `VASECTOMY` - Vasectomy\n* `VASCULAR_STUDIES` - Vascular Studies\n* `VASCULAR_SURGERY` - Vascular Surgery\n* `VOCATIONAL_SERVICES` - Vocational Services\n* `WALK_IN_CLINIC` - Walk-In Clinic\n* `WEIGHT_LOSS_CLINIC` - Weight Loss Clinic\n* `WOMENS_HEALTH` - Women's Health\n* `WOUND_CARE` - Wound Care\n* `X_RAY` - X-Ray / Radiography\n* `YOUTH_SHELTER` - Youth Shelter\n"},{"name":"Forms","description":"Search and list Ocean Forms and Ocean Form favorites."},{"name":"Patients","description":"Find, create, and update patients in your site."},{"name":"Referral Targets","description":"API for all referral target related operations."},{"name":"Referrals","description":"Retrieve and edit referrals that have been received by your site."},{"name":"Sample Code","description":"## Decryption\nThis can be used to decrypt any EncryptedBlockDtos that our Referral API endpoints return (E.g. encryptedPtData).  \nAn example of how to use this utility: [Example: Decrypt a patient's data](#section/Example:-Decrypt-a-patient's-data)\n\n```js\n\t/**\n\t*******************************************************\n\t*  Ocean eReferral Decryption Utility\n\t*******************************************************\n\t*/\n\tvar OceanDecrypt = (function() {\n\t\tvar scope = {\n\t\t\tsharedEncryptionKey: null,\n\t\t\tprivateKeys: null\n\t\t}\n\t\n\t\tfunction setSharedEncryptionKey (sharedEncryptionKey) {\n\t\t\tscope.sharedEncryptionKey = sharedEncryptionKey;\n\t\t}\n\t\n\t\tfunction setPrivateKeys(privateKeyData, iv) {\n\t\t\tvar sekAsBytes = getSecretKeyBytes(scope.sharedEncryptionKey);\n\t\t\tvar ivAsBytes = CryptoJS.enc.Base64.parse(iv);\n\t\t\tvar privateKeysAsBytes= CryptoJS.AES.decrypt(privateKeyData, sekAsBytes, {iv: ivAsBytes});\n\t\t\tvar privateKeysAsUtf8 = CryptoJS.enc.Utf8.stringify(privateKeysAsBytes);\n\t\t\tvar privateKeysArray = privateKeysAsUtf8.split(\"|\");\n\t\t\tscope.privateKeys = privateKeysArray.map(function(privateKeyAsJson) {\n\t\t\t\treturn JSON.parse(privateKeyAsJson);\n\t\t\t});\n\t\t}\n\t\t\n\t\tfunction decryptOneTimeKey(referral) {\n\t\t\tvar oneTimeKey = decryptWithPrivateKeys(scope.privateKeys, referral.oneTimeKeyEncryptedWithTargetPublicKey);\n\t\t\treturn CryptoJS.enc.Base64.parse(oneTimeKey);\n\t\t}\n\t\n\t\tfunction decryptPtData(referral) {\n\t\t\tvar oneTimeKey = decryptWithPrivateKeys(scope.privateKeys, referral.oneTimeKeyEncryptedWithTargetPublicKey);\n\t\t\tvar oneTimeKeyBytes = CryptoJS.enc.Base64.parse(oneTimeKey);\n\t\t\tvar ivBytes = CryptoJS.enc.Base64.parse(referral.encryptedPtData.iv);\n\t\t\tvar textBytes = CryptoJS.AES.decrypt(referral.encryptedPtData.data, oneTimeKeyBytes, {iv: ivBytes});\n\t\t\tif (textBytes.words.length > 0) {\n\t\t\t\tvar decryptedText = CryptoJS.enc.Utf8.stringify(textBytes);\n\t\t\t\treturn JSON.parse(decryptedText);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Error decrypting, check the secret key you're using\");\n\t\t\t}\n\t\t}\n\t\n\t\tfunction getSecretKeyBytes(secretKey) {\n\t\t\t// We need the bytes of our keys to use in decryption\n\t\t\twhile(secretKey.length < 16) secretKey += \"0\"; //Zero pad the secretKey to 16 bytes\n\t\t\treturn CryptoJS.enc.Utf8.parse(secretKey);\n\t\t}\n\t\n\t\tfunction decryptWithPrivateKeys(privateKeys, cipherTextHex) {\n\t\t\tvar e = null;\n\t\t\tif (!privateKeys || privateKeys.length === 0) {\n\t\t\t\tthrow \"no private keys specified\";\n\t\t\t}\n\t\t\tfor (var i = 0; i < privateKeys.length; i++) {\n\t\t\t\t//try all the private keys until one works\n\t\t\t\ttry {\n\t\t\t\t\tvar plainText = decryptWithPrivateKey(privateKeys[i], cipherTextHex);\n\t\t\t\t\tif (plainText) {\n\t\t\t\t\t\treturn plainText;\n\t\t\t\t\t}\n\t\t\t\t\tthrow \"asymmetric decryption failed\";\n\t\t\t\t}\n\t\t\t\tcatch (exc) {\n\t\t\t\t\te = exc;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t\n\t\tfunction decryptWithPrivateKey(privateKey, cipherTextHex) {\n\t\t\tif (typeof privateKey == \"string\") {\n\t\t\t\tprivateKey = JSON.parse(privateKey);\n\t\t\t}\n\t\t\tvar rsa = new JSEncrypt();\n\t\t\trsa.setKey({});\n\t\t\trsa.getKey().setPrivateEx(privateKey.n, privateKey.e, privateKey.d, privateKey.p,\n\t\t\t\tprivateKey.q, privateKey.dmp1, privateKey.dmq1, privateKey.coeff);\n\t\t\tvar decryptedText = rsa.decrypt(cipherTextHex);\n\t\t\treturn decryptedText;\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetSharedEncryptionKey: setSharedEncryptionKey,\n\t\t\tsetPrivateKeys: setPrivateKeys,\n\t\t\tdecryptPtData: decryptPtData,\n\t\t\tdecryptOneTimeKey: decryptOneTimeKey\n\t\t}\n\t});\n```\n\n## Encryption\nThis can be used to produce any EncryptedBlockDtos that our Referral API endpoints ask for (E.g. AttachmentRefDto.encryptedEncryptionKey, AttachmentRefDto.encryptedFileName, encryptedPtData, etc.).  \nAn example of how to use this utility: [Example: Add a message](#section/Example:-Add-a-message)\n\n```js\n\t/**\n\t*******************************************************\n\t* Ocean eReferral Encryption Utility\n\t*******************************************************\n\t*/\n\tvar OceanEncrypt = (function() {\n\t\t\n\t\tfunction encryptString(string, oneTimeKeyBytes) {\n\t\t\tvar keyBytes = oneTimeKeyBytes;\n\t\t\tvar ivBytes = CryptoJS.lib.WordArray.random(16);\n\t\t\tvar strBytes = CryptoJS.enc.Utf8.parse(string);\n\t\t\t\n\t\t\tvar encryptedCryptoJS = CryptoJS.AES.encrypt(strBytes, truncateToUsableAESKey(keyBytes), {iv: ivBytes});\n\t\t\tvar encryptedBlockDto = {\n\t\t\t\tdata: CryptoJS.enc.Base64.stringify(encryptedCryptoJS.ciphertext),\n\t\t\t\tiv: CryptoJS.enc.Base64.stringify(ivBytes)\n\t\t\t};\n\t\t\treturn encryptedBlockDto;\n\t\t}\n\t\t\n\t\tfunction truncateToUsableAESKey(keyBytes) {\n\t\t\tif (keyBytes.sigBytes > 32) {\n\t\t\t\tkeyBytes.sigBytes = 32;\n\t\t\t} else if (keyBytes.sigBytes > 24 && keyBytes.sigBytes < 32) {\n\t\t\t\tkeyBytes.sigBytes = 24;\n\t\t\t} else if (keyBytes.sigBytes > 16 && keyBytes.sigBytes < 24) {\n\t\t\t\tkeyBytes.sigBytes = 16;\n\t\t\t}\n\t\t\t\n\t\t\treturn keyBytes;\n\t\t}\n\t\t\n\t\treturn {\n\t\t\tencryptString: encryptString\n\t\t}\n\t});\n```\n## Example: Encrypt a patient's data\n\n```js\n    /**\n\t*******************************************************\n\t* Ocean API Client - Encrypt a patient's data\n\t*******************************************************\n\t*/\n    function encryptPatient() {\n        var data = {};\n        \n        // create a random key to use\n        var oneTimeKeyBytes = CryptoJS.lib.WordArray.random(16);\n        // this is added to the end of a patient message link as a hash\n        var oneTimeKey = CryptoJS.enc.Base64.stringify(oneTimeKeyBytes);\n        \n        // create a random initialization vector to use\n        var iv = CryptoJS.enc.Base64.stringify(CryptoJS.lib.WordArray.random(16));\n        var ivBytes = CryptoJS.enc.Base64.parse(iv);\n        \n        // This is the shared encryption key that is specific to your site, it is at least 16 characters\n        var secretKey = \"TestTestTestTest\";\n        var secretKeyBytes = CryptoJS.enc.Utf8.parse(secretKey);\n        \n        var ptData = {};\n        ptData.siteNum = \"1234\";\n        ptData.demographics = {};\n        ptData.demographics.firstName = \"Test\";\n        ptData.demographics.surname = \"Patient\";\n        ptData.demographics.sex = \"M\";\n        ptData.demographics.birthDate = new Date(\"2000-10-31\").toISOString();\n        ptData.demographics.hn = \"9117423450\";\n        ptData.demographics.emailConsent = true;\n        var address = {};\n        address.streetAddress = \"Test Address St\";\n        address.city = \"Test City\";\n        address.province = \"ON\";\n        address.postalCode = \"A1A1A1\";\n        address.email = \"test@cognisantmd.com\";\n        address.homePhone = \"1231231234\";\n        ptData.demographics.address = address;\n        var ptString = JSON.stringify(ptData);\n        var encryptedPatient = CryptoJS.AES.encrypt(ptString, oneTimeKeyBytes, {iv: ivBytes});\n\n        var encryptedOneTimeKey = CryptoJS.AES.encrypt(oneTimeKeyBytes, secretKeyBytes, {iv: ivBytes});\n        \n        // Convert the encryptedPatient data and convert it to a hex string\n        var dataHex = encryptedPatient.ciphertext.toString(CryptoJS.enc.Hex);\n        // Convert the hex string into a byte array\n        var dataArray = [];\n        for (var i = 0; i < dataHex.length; i += 2) {\n            if((i + 1) === dataHex.length) {\n                dataArray[i/2] = parseInt(dataHex[i] + \"0\", 16);\n            } else {\n                dataArray[i/2] = parseInt(dataHex[i] + dataHex[i + 1], 16);\n            }\n        }\n        \n        // These are needed to successfully create a stub patient in Ocean\n        // iv header\n        data.iv = iv;\n        // one time key header\n        data.oneTimeKeyEncrypted = encryptedOneTimeKey.ciphertext.toString(CryptoJS.enc.Base64);\n        // patient data body\n        data.dataArray = dataArray;\n        \n        return data;\n    }\n```\n\n## Example: Decrypt a patient's data \n\n```js\n\t/**\n\t*******************************************************\n\t* Ocean API Client - Decrypt a patient's data\n\t*******************************************************\n\t*/\n\n\tvar oceanDecrypt = new OceanDecrypt();\n\tvar sharedEncryptionKey = $(\"#secretKey\").val();\n\toceanDecrypt.setSharedEncryptionKey(sharedEncryptionKey);\n\treturn grabPrivateKeys()\n\t.then(function(privateKeyPayload) {\n\t\toceanDecrypt.setPrivateKeys(privateKeyPayload.data, privateKeyPayload.iv);\n\t})\n\t.then(function() {\n\t\treturn grabReferral();\n\t})\n\t.then(function(referral) {\n\t\tvar phi = oceanDecrypt.decryptPtData(referral);\n\t\treferral.decryptedPtData = phi;\n\t\treturn referral;\n\t})\n\t.done(function(referralWithDecryptedPhi) {\n\t\tsetResponseText(\"Server returned: \" + JSON.stringify(referralWithDecryptedPhi));\n\t});\n\t\n\tfunction grabPrivateKeys() {\n\t\treturn $.ajax(\"/svc/v1/site/privateKey\", {\n\t\t\theaders: {\n\t\t\t\t// These are the required session headers\n\t\t\t\tsiteNum: $(\"#siteNum\").val(),\n\t\t\t\tsiteKey: $(\"#sessionKey\").val(),\n\t\t\t\tsitePassword: $(\"#sessionCred\").val()\n\t\t\t},\n\t\t\ttype: \"GET\"\n\t\t}).then(function (data, textStatus, jqXHR){\n\t\t\tdata = JSON.parse(data);\n\t\t\tvar iv = jqXHR.getResponseHeader(\"iv\");\n\t\t\treturn {data: data, iv: iv};\n\t\t}).fail(function (jqXHR, textStatus, errorThrown){\n\t\t\tsetErrorText(\"Error \" + jqXHR.status + \" \" + jqXHR.statusText);\n\t\t});\n\t}\n\t\n\tfunction grabReferral() {\n\t\treturn $.ajax(\"/svc/v1/referrals/\" + $(\"#referralRef\").val(), {\n\t\t\theaders: {\n\t\t\t\t// These are the required session headers\n\t\t\t\tsiteNum: $(\"#siteNum\").val(),\n\t\t\t\tsiteKey: $(\"#sessionKey\").val(),\n\t\t\t\tsitePassword: $(\"#sessionCred\").val()\n\t\t\t},\n\t\t\ttype: \"GET\"\n\t\t}).then(function (data, textStatus, jqXHR){\n\t\t\treturn data;\n\t\t}).fail(function (jqXHR, textStatus, errorThrown){\n\t\t\tsetErrorText(\"Error \" + jqXHR.status + \" \" + jqXHR.statusText);\n\t\t});\n\t}\n```\n\n## Example: Add a message\n\n```js\n\t/**\n\t*******************************************************\n\t* Ocean API Client - Add a message Example\n\t*******************************************************\n\t*/\n\n\tvar oceanDecrypt = new OceanDecrypt();\n\tvar oceanEncrypt = new OceanEncrypt();\n\tvar sharedEncryptionKey = $(\"#secretKey\").val();\n\toceanDecrypt.setSharedEncryptionKey(sharedEncryptionKey);\n\treturn grabPrivateKeys()\n\t.then(function(privateKeyPayload) {\n\t\toceanDecrypt.setPrivateKeys(privateKeyPayload.data, privateKeyPayload.iv);\n\t})\n\t.then(function() {\n\t\treturn grabReferral();\n\t})\n\t.then(function(referral) {\n\t\tvar oneTimeKeyBytes = oceanDecrypt.decryptOneTimeKey(referral);\n\t\t\n\t\tvar msgText = \"Please send blood test results.\"\n\t\tvar msgJson = JSON.stringify({message : msgText});\n\t\n\t\tvar encryptedBlockDto = oceanEncrypt.encryptString(msgJson, oneTimeKeyBytes);\n\t\t\n\t\tvar message = {\n\t\t\tencryptedMsg : encryptedBlockDto,\n\t\t\ttargetSiteNum : \"1234\"\n\t\t};\n\t\t\n\t\treturn message;\n\t})\n\t.then(function(message) {\n\t\treturn addMessage(message);\n\t})\n\t.done(function(messageRef) {\n\t\tsetResponseText(\"Server returned: \" + JSON.stringify(messageRef));\n\t});\n\t\n\tfunction grabPrivateKeys() {\n\t\treturn $.ajax(\"/svc/v1/site/privateKey\", {\n\t\t\theaders: {\n\t\t\t\t// These are the required session headers\n\t\t\t\tsiteNum: $(\"#siteNum\").val(),\n\t\t\t\tsiteKey: $(\"#sessionKey\").val(),\n\t\t\t\tsitePassword: $(\"#sessionCred\").val()\n\t\t\t},\n\t\t\ttype: \"GET\"\n\t\t}).then(function (data, textStatus, jqXHR){\n\t\t\tdata = JSON.parse(data);\n\t\t\tvar iv = jqXHR.getResponseHeader(\"iv\");\n\t\t\treturn {data: data, iv: iv};\n\t\t}).fail(function (jqXHR, textStatus, errorThrown){\n\t\t\tsetErrorText(\"Error \" + jqXHR.status + \" \" + jqXHR.statusText);\n\t\t});\n\t}\n\t\n\tfunction grabReferral() {\n\t\treturn $.ajax(\"/svc/v1/referrals/\" + $(\"#referralRef\").val(), {\n\t\t\theaders: {\n\t\t\t\t// These are the required session headers\n\t\t\t\tsiteNum: $(\"#siteNum\").val(),\n\t\t\t\tsiteKey: $(\"#sessionKey\").val(),\n\t\t\t\tsitePassword: $(\"#sessionCred\").val()\n\t\t\t},\n\t\t\ttype: \"GET\"\n\t\t}).then(function (data, textStatus, jqXHR){\n\t\t\treturn data;\n\t\t}).fail(function (jqXHR, textStatus, errorThrown){\n\t\t\tsetErrorText(\"Error \" + jqXHR.status + \" \" + jqXHR.statusText);\n\t\t});\n\t}\n\t\n\tfunction addMessage(message) {\n\t\treturn $.ajax(\"/svc/v1/referrals/\" + $(\"#referralRef\").val() + \"/messages\", {\n\t\t\theaders: {\n\t\t\t\t// These are the required session headers\n\t\t\t\tsiteNum: $(\"#siteNum\").val(),\n\t\t\t\tsiteKey: $(\"#sessionKey\").val(),\n\t\t\t\tsitePassword: $(\"#sessionCred\").val()\n\t\t\t},\n\t\t\tcontentType: \"application/json\",\n\t\t\tdata: JSON.stringify(message),\n\t\t\tdataType: \"json\",\n\t\t\ttype: \"POST\"\n\t\t}).then(function (data, textStatus, jqXHR){\n\t\t\tvar messageRef = JSON.parse(data);\n\t\t\treturn messageRef;\n\t\t}).fail(function (jqXHR, textStatus, errorThrown){\n\t\t\tsetErrorText(\"Error \" + jqXHR.status + \" \" + jqXHR.statusText);\n\t\t});\n\t}\n```"},{"name":"Session","description":"Validate API credentials, during configuration."}],"paths":{"/svc/v1/forms":{"get":{"tags":["Forms"],"summary":"Find Forms","description":"Search and list available Ocean Forms.  Global Forms are those available to all Ocean users, as opposed to custom site-specific Forms.","operationId":"findEFormsUsingGET","produces":["*/*"],"parameters":[{"name":"global","in":"query","description":"If 'true', search is done on global forms only","required":false,"type":"string"},{"name":"search","in":"query","description":"Form search string - supports partial match","required":false,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}}}}},"/svc/v1/forms/favourites":{"get":{"tags":["Forms"],"summary":"Get the current site's Form favourites","description":"Retrieve list of Ocean Form favourites.  Ocean favourites are named collections of forms that can be added to a patient's queue.","operationId":"getFavouritesUsingGET","produces":["*/*"],"responses":{"200":{"description":"Ok","schema":{"type":"string"}}}}},"/svc/v1/patients":{"get":{"tags":["Patients"],"summary":"Find patients with pending forms.","description":"List Ocean patients with pending actions.  This includes patients with pending downloads & 'stub' patients awaiting upload of patient data from external sources.  (The latter is the Ocean \"patient pull\" integration model.)","operationId":"listPendingPatientsUsingGET","produces":["*/*"],"parameters":[{"name":"cohort","in":"query","description":"Name of cohort the patient belongs to.","required":false,"type":"string"},{"name":"extPatientRef","in":"query","description":"External patient reference (e.g. EMR ID)","required":false,"type":"string"},{"name":"healthNumberHash","in":"query","description":"Encrypted health number hash","required":false,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"204":{"description":"No Content"},"404":{"description":"Patient Not Found"}}},"post":{"tags":["Patients"],"summary":"Create a patient","description":"Create a stub patient in Ocean given the required information, for an example of how to set up the data needed, check [Example: Encrypt a Patient](#section/Example:-Encrypt-a-patient's-data). The endpoint will return the Ocean patient reference of the created patient.","operationId":"createPatientUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"Content-Type","in":"header","description":"Must be 'application/json'","required":true,"type":"string"},{"in":"body","name":"encPatientJson","description":"This is a base64 encoded hex string that contains the encrypted patient data, for an example of how to set this up, check [Example: Encrypt a Patient](#section/Example:-Encrypt-a-patient's-data)","required":true,"schema":{"type":"string","example":"123"}},{"name":"encryptedHealthNumber","in":"query","description":"Encrypted Health number hash","required":false,"type":"string"},{"name":"extPatientRef","in":"query","description":"External patient ref specified by the EMR","required":false,"type":"string"},{"name":"healthNumberHash","in":"query","description":"Health number hash","required":false,"type":"string"},{"name":"iv","in":"header","description":"A random 16 byte Base64 encoded string","required":true,"type":"string"},{"name":"oneTimeKey","in":"header","description":"A random 16 byte string that is encrypted using the shared encryption key and then encoded in Base64","required":true,"type":"string"}],"responses":{"201":{"description":"Patient created","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"409":{"description":"No available refs for patient"}}}},"/svc/v1/patients/{patientRef}":{"get":{"tags":["Patients"],"summary":"Retrieve a patient","description":"Retrieves encrypted patient data from the Ocean portal. The encrypted patient data is transmitted as a JSON byte array.  The necessary values for decryption are included as HTTP headers.","operationId":"getPatientUsingGET","produces":["*/*"],"parameters":[{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"}],"responses":{"200":{"description":"Ok<br />*The response schema is the data property in an [Encrypted Block](#section/Ocean-PHI-Encryption/Encrypted-Blocks), for an example of the decrypted Patient object, take a look at encryptedPtData in the response of [Retrieve a referral](#operation/getReferralUsingGET)*","headers":{"externalPatientRef":{"type":"string"},"oneTimeKeyEncrypted":{"type":"string"},"iv":{"type":"string"}},"schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Patient Not Found"}}},"post":{"tags":["Patients"],"summary":"Update a stub patient","description":"Provides data for an existing \"stub\" patient (Ocean \"Patient Pull\" model).","operationId":"updateStubPatientUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"Content-Type","in":"header","description":"Must be 'application/json'","required":true,"type":"string"},{"in":"body","name":"encPatientJson","description":"This is the data property in an [Encrypted Block](#section/Ocean-PHI-Encryption/Encrypted-Blocks), for an example of the decrypted Patient object, take a look at encryptedPtData in the response of [Retrieve a referral](#operation/getReferralUsingGET)","required":true,"schema":{"type":"string"}},{"name":"iv","in":"header","description":"This is the iv property in an [Encrypted Block](#section/Ocean-PHI-Encryption/Encrypted-Blocks), for an example of the decrypted Patient object, take a look at encryptedPtData in the response of [Retrieve a referral](#operation/getReferralUsingGET)","required":true,"type":"string"},{"name":"oneTimeKey","in":"header","description":"Base64 encoded byte array containing the encrypted one time key (see [Sample Code](#tag/Sample-Code))","required":true,"type":"string"},{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"}],"responses":{"200":{"description":"Patient Updated","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Patient Not Found"},"409":{"description":"No available refs for patient"}}}},"/svc/v1/patients/{patientRef}/createPatientMessageLink":{"post":{"tags":["Patients"],"summary":"Create a Patient Message Link [BETA]","description":"Specify forms and other parameters to create a patient message link for a specified patient. This will return the link to the patient message. The caller is responsible for adding the one time key to the end of the link as a hash. Note: This endpoint is in beta and subject to change in subsequent updates.","operationId":"createPatientMessageLinkUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"eFormRefs","description":"An array of eForm refs to add to the link","required":true,"schema":{"type":"string"}},{"name":"linkExpiryDays","in":"query","description":"The number of days before the patient message expires and is no longer accessible","required":false,"type":"string"},{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"},{"name":"redirectUrl","in":"query","description":"A url to redirect to when the patient message is completed","required":false,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Patient Not Found"},"409":{"description":"No available refs for patient"}}}},"/svc/v1/patients/{patientRef}/formQueue":{"get":{"tags":["Patients"],"summary":"Retrieve a list of eforms queued for a patient","description":"Retrieve a list of eforms queued for a patient","operationId":"getEFormQueueUsingGET","produces":["*/*"],"parameters":[{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"404":{"description":"Patient Not Found"}}},"post":{"tags":["Patients"],"summary":"Add an EForm to queue","description":"Add a specific EForm to a patient's queue using the form ref.","operationId":"addEFormToQueueUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"formRef","in":"query","description":"The ref number(s) for the form(s) to be added","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Patient Not Found"}}},"delete":{"tags":["Patients"],"summary":"Remove an EForm from queue","description":"Remove an EForm from a patient's queue using the form ref.","operationId":"removeEFormUsingDELETE","produces":["*/*"],"parameters":[{"name":"formRef","in":"query","description":"The ref number(s) for the form(s) to be deleted","required":true,"type":"string"},{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}}}}},"/svc/v1/patients/{patientRef}/notes":{"get":{"tags":["Patients"],"summary":"Retrieve a patient note","description":"If the Ocean session id is provided, it will retrieve the corresponding encrypted note, otherwise the first non-downloaded encrypted patient note will be retrieved.  The same non-downloaded note will be returned until it has been marked downloaded via the PUT API.","operationId":"getPatientNotesUsingGET","produces":["*/*"],"parameters":[{"name":"oceanSessionId","in":"query","description":"Ocean note session id","required":false,"type":"string"},{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"}],"responses":{"200":{"description":"Ok<br /> *The response schema is the data property in an [Encrypted Block](#section/Ocean-PHI-Encryption/Encrypted-Blocks) for the note itself.*","headers":{"externalPatientRef":{"type":"string"},"payloadVersion":{"type":"string"},"hasFormsQueued":{"type":"string"},"hasMoreUpdates":{"type":"string"},"oneTimeKeyDataBase64":{"type":"string"},"finalize":{"type":"string"},"noteId":{"type":"string"},"oneTimeKeyIvBase64":{"type":"string"},"iv":{"type":"string"}},"schema":{"type":"string"}},"204":{"description":"No Content"},"404":{"description":"Patient Not Found"}}},"put":{"tags":["Patients"],"summary":"Mark a patient as downloaded","description":"Marks an Ocean note downloaded or resets the downloaded status on all notes.  One of resetAllNotes or noteId must be specified.  This API must be called after each note is successfully downloaded and decrypted.","operationId":"markPatientDownloadedUsingPUT","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"noteId","in":"query","description":"Marks the corresponding note as downloaded","required":false,"type":"integer","default":-1,"format":"int32"},{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"},{"name":"resetAllNotes","in":"query","description":"If specified, all patient notes will be made available for download again","required":false,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Patient Not Found"},"500":{"description":"Error updating the patient"}}}},"/svc/v1/patients/{patientRef}/notes/all":{"get":{"tags":["Patients"],"summary":"Retrieve all the note details available on a patient","description":"Retrieve all the note details corresponding to a specific ocean patient. To retrieve a note's encrypted data, use the [Retrieve a note](#operation/getPatientNotesUsingGET) endpoint. Patients and notes may be removed at anytime by users or by purge rules and so some notes may not appear. For more information, click [here](https://support.cognisantmd.com/hc/en-us/articles/221439267-How-long-are-patient-records-with-PHI-kept-in-Ocean-).","operationId":"retrieveNoteAllNotesUsingGET","produces":["*/*"],"parameters":[{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"array","items":{"$ref":"#/definitions/EncryptedNoteData"}}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Patient Not Found"},"500":{"description":"Error updating the patient"}}}},"/svc/v1/patients/{patientRef}/status":{"get":{"tags":["Patients"],"summary":"Check a patient's status","description":"Retrieve the patient status","operationId":"getPatientStatusUsingGET","produces":["*/*"],"parameters":[{"name":"patientRef","in":"path","description":"Ocean patient reference","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Patient Not Found"},"409":{"description":"No available refs for patient"}}}},"/svc/v1/referralInitialInfos":{"post":{"tags":["Referrals"],"summary":"Submit initial info for a referral","description":"Submit the preliminary information for an incomplete referral. These incomplete referrals are shown in the site's Incomplete eReferral outbox, similar to a referral that has been \"Saved for Later\" in Ocean's Send Referral UI. These records may be used to pre-populate the referral information in Ocean's Send Referral UI when loaded using the returned initialInfoId and initialInfoAccessKey.","operationId":"submitInitialInfoUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"encPatientData","description":"This is the data property in an [Encrypted Block](#section/Ocean-PHI-Encryption/Encrypted-Blocks), for an example of the decrypted Patient object, take a look at encryptedPtData in the response of [Retrieve a referral](#operation/getReferralUsingGET)","required":true,"schema":{"type":"string"}},{"name":"iv","in":"header","description":"This is the iv property in an [Encrypted Block](#section/Ocean-PHI-Encryption/Encrypted-Blocks), for an example of the decrypted Patient object, take a look at encryptedPtData in the response of [Retrieve a referral](#operation/getReferralUsingGET)","required":true,"type":"string"},{"name":"listingRef","in":"query","description":"The reference for the referral listing","required":true,"type":"string"},{"name":"offeringRef","in":"query","description":"The reference for the health service offered by the referral listing","required":true,"type":"string"},{"name":"oneTimeKey","in":"header","description":"The Base64 encoded one time key that was used to encrypt the patient, encrypted with the site's public key and encoded in hexadecimal","required":true,"type":"string"}],"responses":{"201":{"description":"Referral Created","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"}}}},"/svc/v1/referralInitialInfos/{referralInitialInfoId}":{"get":{"tags":["Referrals"],"summary":"Load a referral's initial info","description":"Load a referral's initial info.","operationId":"loadInitialInfoUsingGET","produces":["*/*"],"parameters":[{"name":"initialInfoAccessKey","in":"query","description":"Access key for a given referral's initial info","required":true,"type":"string"},{"name":"referralInitialInfoId","in":"path","description":"Identifier for a given referral's initial info","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"ReferralInitialInfo Not Found"}}}},"/svc/v1/referralTarget/selfReferrals":{"get":{"tags":["Referral Targets"],"summary":"Search for referral targets","description":"Returns ReferralTargetInfo objects matching the search criteria for ReferralTargets offering self referrals.","operationId":"searchUsingGET","produces":["*/*"],"parameters":[{"name":"healthService","in":"query","description":"Health service code(s), check [here](#section/Supported-Health-Services) for a list of supported health services","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"keyword","in":"query","description":"Searches keywords associated with the listing. Listing keywords include title, health services, description, contact information, etc.","required":false,"type":"string"},{"name":"language","in":"query","description":"Language name (currently only full names are supported, not ISO 639)","required":false,"type":"string"},{"name":"lat","in":"query","description":"Latitude in decimal notation, e.g. -79.403","required":true,"type":"string"},{"name":"lng","in":"query","description":"Longitude in decimal notation, e.g. 43.731)","required":true,"type":"string"},{"name":"searchRadius","in":"query","description":"Search radius in km. Defaults to 25km.","required":false,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"}}}},"/svc/v1/referralTarget/{rtRef}":{"get":{"tags":["Referral Targets"],"summary":"Get a referral target","description":"Fetches the referral target with the given ref.","operationId":"getReferralTargetUsingGET","produces":["*/*"],"parameters":[{"name":"rtRef","in":"path","description":"Ocean referral target ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"404":{"description":"Referral Target Not Found"}}}},"/svc/v1/referrals":{"get":{"tags":["Referrals"],"summary":"Get a list of referrals","description":"Fetches an array of referrals matching the search criteria upto a maximum of 100 at a time.","operationId":"getReferralsUsingGET","produces":["*/*"],"parameters":[{"name":"endDate","in":"query","description":"(ISO 8601 Datetime parameters): Specify the end of the referral sent date range. Start date must also be specified.","required":false,"type":"string"},{"name":"modifiedSince","in":"query","description":"(ISO 8601 Datetime parameter): Referral modification date. Useful for discovering updated referrals during synchronization.","required":false,"type":"string"},{"name":"projection","in":"query","description":"If 'none' is specified, only a list of referral refs will be returned, otherwise a list of referrals will be returned","required":false,"type":"string"},{"name":"skip","in":"query","description":"The number of matching referrals to skip prior to returning the next set of matches.","required":false,"type":"integer","format":"int32"},{"name":"startDate","in":"query","description":"(ISO 8601 Datetime parameters): Specify the start of the referral sent date range. End date must also be specified.","required":false,"type":"string"},{"name":"targetRef","in":"query","description":"Reference to the desired Ocean referral target. All targets associated with the site will be queried if not provided.","required":false,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Referral Not Found"}}}},"/svc/v1/referrals/analytics":{"get":{"tags":["Referrals"],"summary":"Export referral analytics","description":"Export referral analytics based on a date range","operationId":"exportReferralAnalyticsUsingGET","produces":["*/*"],"parameters":[{"name":"modifiedEnd","in":"query","description":"(ISO 8601 Datetime parameter): End date","required":true,"type":"string"},{"name":"modifiedStart","in":"query","description":"(ISO 8601 Datetime parameter): Start date","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"204":{"description":"No Content"},"400":{"description":"Invalid/Missing Parameters"}}}},"/svc/v1/referrals/customAnalytics":{"get":{"tags":["Referrals"],"summary":"Export custom referral analytics","description":"Export referral analytics based on a date range and a custom template. The list of resulting objects contain the fields determined by template given in the request.","operationId":"exportCustomReferralAnalyticsUsingGET","produces":["*/*"],"parameters":[{"name":"modifiedEnd","in":"query","description":"(ISO 8601 Datetime parameter): End date","required":true,"type":"string"},{"name":"modifiedStart","in":"query","description":"(ISO 8601 Datetime parameter): Start date","required":true,"type":"string"},{"name":"template","in":"query","description":"Template name","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"204":{"description":"No Content"},"400":{"description":"Invalid/Missing Parameters"}}}},"/svc/v1/referrals/{referralRef}":{"get":{"tags":["Referrals"],"summary":"Retrieve a referral","description":"Retrieves a referral with a given ref.","operationId":"getReferralUsingGET","produces":["application/json;charset=UTF-8"],"parameters":[{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"$ref":"#/definitions/ReferralDataRes"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Referral Not Found"}}},"post":{"tags":["Referrals"],"summary":"Update a referral","description":"Sets appointment dates/times, booking comments, and referral status changes.\nThis call will also send notification emails to pertinent referral stakeholders, as if the same change were made by a user interacting with Ocean's eReferral UI. Caveat: the emails will only send if the integration permits it. For example, a referral integration in the Ocean site may be configured to disallow email notifications upon referral completion. Furthermore, patient emails will only send if a valid emailPhi object is supplied in the request body and if the site has enabled patient email notifications in its site configuration.","operationId":"updateReferralUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"apptTime1","in":"query","description":"(ISO 8601 Datetime parameter): first scheduled appointment","required":false,"type":"string"},{"name":"apptTime2","in":"query","description":"(ISO 8601 Datetime parameter): second scheduled appointment","required":false,"type":"string"},{"name":"bookingComment","in":"query","description":"Text comments for patient and referring clinician","required":false,"type":"string"},{"name":"bookingUrl","in":"query","description":"This URL may be used by Ocean to redirect the referrer to a new site supplied by the third party, for the purpose of finishing the referral send flow by interacting with the third party's web application. It may be used for example by the third party to present a post-referral online booking interface, or to request that the referrer complete subsequent forms in the third party system. Ocean will poll for this value every few seconds after a referral has been submitted. For security reasons, the base of the URL must match the URL entered in the corresponding Integrations configuration in the owner Ocean site; the remainder of the URL may have additional parameters, such as a referral ID.","required":false,"type":"string"},{"name":"confirmed","in":"query","description":"Sets booking confirmed on the referral","required":false,"type":"boolean"},{"name":"externalRef","in":"query","description":"External ref","required":false,"type":"string"},{"name":"reason","in":"query","description":"Providing a reason for referral status change. Mandatory for Declined and Cancelled status changes","required":false,"type":"string"},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"},{"name":"status","in":"query","description":"Updates the referral with the specified status. Currently supporting: Accepted, Declined, Confirmed, Cancelled, Completed, Printed, Incomplete, Sent","required":false,"type":"string"},{"in":"body","name":"updateData","description":"updateData","required":false,"schema":{"type":"string"}}],"responses":{"200":{"description":"Ok"},"400":{"description":"Invalid/Missing Parameters"},"409":{"description":"Conflict trying to add appointments"}}}},"/svc/v1/referrals/{referralRef}/appointments":{"post":{"tags":["Referrals"],"summary":"Add a referral appointment","description":"Add a referral appointment.","operationId":"addReferralAppointmentUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"apptTime","in":"query","description":"(ISO 8601 Datetime parameter): scheduled appointment time","required":true,"type":"string"},{"name":"apptType","in":"query","description":"The type of appointment","required":false,"type":"string"},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"},{"name":"waitTime","in":"query","description":"Specify the wait time for the appointment","required":false,"type":"string"}],"responses":{"204":{"description":"No Content"},"400":{"description":"Invalid/Missing Parameters"},"409":{"description":"Conflict trying to add appointments"}}}},"/svc/v1/referrals/{referralRef}/appointments/{apptIndex}":{"post":{"tags":["Referrals"],"summary":"Update a referral appointment","description":"Update a given referral appointment's time, type, or wait time.","operationId":"updateReferralAppointmentUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"apptIndex","in":"path","description":"The index of the appointment that needs to be updated","required":true,"type":"string"},{"name":"apptTime","in":"query","description":"(ISO 8601 Datetime parameter): scheduled appointment time","required":false,"type":"string"},{"name":"apptType","in":"query","description":"The type of appointment","required":false,"type":"string"},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"},{"name":"waitTime","in":"query","description":"Specify the wait time for the appointment","required":false,"type":"string"}],"responses":{"200":{"description":"Ok"},"400":{"description":"Invalid/Missing Parameters"}}},"delete":{"tags":["Referrals"],"summary":"Delete a referral appointment","description":"Delete a specific referral appointment using an index.","operationId":"deleteReferralAppointmentUsingDELETE","produces":["*/*"],"parameters":[{"name":"apptIndex","in":"path","description":"The index of the appointment that will be deleted","required":true,"type":"string"},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok"},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Appointment Not Found"}}}},"/svc/v1/referrals/{referralRef}/attachments":{"post":{"tags":["Referrals"],"summary":"Save a referral attachment","description":"Save a referral attachment specifying the encrypted data.","operationId":"saveUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"contentType","in":"header","description":"Must be 'application/json'","required":true,"type":"string"},{"in":"body","name":"encryptedDataBase64","description":"This is the data property in an [Encrypted Block](#section/Ocean-PHI-Encryption/Encrypted-Blocks)","required":true,"schema":{"type":"string"}},{"name":"ivBase64","in":"header","description":"This is the iv property in an [Encrypted Block](#section/Ocean-PHI-Encryption/Encrypted-Blocks)","required":true,"type":"string"},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Referral Not Found"}}}},"/svc/v1/referrals/{referralRef}/attachments/{attachmentRef}":{"get":{"tags":["Referrals"],"summary":"Retrieve a referral attachment","description":"Retrieve an attachment from a referral using an attachment ref","operationId":"getUsingGET","produces":["*/*"],"parameters":[{"name":"attachmentRef","in":"path","description":"The attachment ref given when uploading an attachment","required":true,"type":"string"},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Referral Attachment Not Found"}}}},"/svc/v1/referrals/{referralRef}/communicationType":{"put":{"tags":["Referrals"],"summary":"Convert a referral","description":"Allows for conversion of eReferrals to eConsults and vice versa along with the option of adding a comment","operationId":"convertReferralUsingPUT","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"communicationType","in":"query","description":"The type of communication to be used for the referral.\nNote: PROVIDER_MESSAGE is deprecated and may be changed or removed in the future. For eConsult functionality, use E_CONSULT.","required":true,"type":"string","enum":["E_CONSULT","E_REFERRAL","PROVIDER_MESSAGE"]},{"in":"body","name":"referralDataComment","description":"A message to be added when converting the referral","required":false,"schema":{"$ref":"#/definitions/ReferralDataComment"}},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok"},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Not Found"},"409":{"description":"Conflict trying to add an eConsult"}}}},"/svc/v1/referrals/{referralRef}/forwardedStatus":{"put":{"tags":["Referrals"],"summary":"Manually forward a referral","description":"Manually forward a referral using the data from the request body","operationId":"manualForwardReferralUsingPUT","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"forwardInfo","description":"Specify options within this data model to manually forward this referral","required":true,"schema":{"$ref":"#/definitions/ReferralForwardInfoData"}},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Not Found"}}}},"/svc/v1/referrals/{referralRef}/markExported":{"post":{"tags":["Referrals"],"summary":"Mark as exported","description":"Mark the referral as exported.","operationId":"markExportedUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"exportedBy","in":"query","description":"The user that is requesting the export","required":false,"type":"string"},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok"},"400":{"description":"Invalid/Missing Parameters"},"404":{"description":"Referral Not Found"}}}},"/svc/v1/referrals/{referralRef}/messages":{"post":{"tags":["Referrals"],"summary":"Add a message","description":"Add a referral comment to an existing referral.","operationId":"addMessageUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"referralDataComment","description":"The comment to be added to the referral","required":true,"schema":{"$ref":"#/definitions/ReferralDataComment"}},{"name":"referralRef","in":"path","description":"Ocean referral ref","required":true,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"},"409":{"description":"Conflict trying to add an eConsult"}}}},"/svc/v1/session":{"get":{"tags":["Session"],"summary":"Validate site credentials","description":"Confirms whether your current Ocean API credentials are valid (NO-OP)","operationId":"validateCredentialsUsingGET","produces":["*/*"],"parameters":[{"name":"siteNum","in":"query","description":"Ocean site number","required":false,"type":"string"}],"responses":{"200":{"description":"Ok","schema":{"type":"string"}},"400":{"description":"Invalid/Missing Parameters"}}}},"/svc/v1/site/privateKey":{"get":{"tags":["Referral Targets"],"summary":"Get your site's private key","description":"Fetches the site's private key(s), for use in decrypting referral one-time keys.  The private key(s) must be decrypted using the site's Shared Encryption Key before use.","operationId":"getReferralTargetPrivateKeyUsingGET","produces":["*/*"],"responses":{"200":{"description":"Ok","schema":{"type":"string"}}}}}},"securityDefinitions":{"siteCredential":{"type":"apiKey","name":"siteCredential","in":"header"},"siteNum":{"type":"apiKey","name":"siteNum","in":"header"},"siteKey":{"type":"apiKey","name":"siteKey","in":"header"}},"definitions":{"Address":{"type":"object","properties":{"businessPhone":{"type":"string"},"city":{"type":"string"},"cityProvince":{"type":"string"},"country":{"type":"string"},"email":{"type":"string"},"fax":{"type":"string"},"homePhone":{"type":"string"},"line1":{"type":"string"},"line2":{"type":"string"},"loc":{"$ref":"#/definitions/GeoLoc"},"mobilePhone":{"type":"string"},"phone":{"type":"string"},"pmoc":{"type":"integer","format":"int32"},"postalCode":{"type":"string"},"province":{"type":"string"},"website":{"type":"string"}},"title":"Address"},"AddressData":{"type":"object","properties":{"city":{"type":"string"},"country":{"type":"string"},"email":{"type":"string"},"fax":{"type":"string"},"line1":{"type":"string"},"line2":{"type":"string"},"phone":{"type":"string"},"postalCode":{"type":"string"},"province":{"type":"string"},"website":{"type":"string"}},"title":"AddressData"},"AttachmentRefDto":{"type":"object","required":["encryptedEncryptionKey","encryptedFileName","fileRef"],"properties":{"emrFileId":{"type":"string","description":"The file ID for this attachment in the EMR"},"encryptedEncryptionKey":{"$ref":"#/definitions/EncryptedBlockDto"},"encryptedFileName":{"$ref":"#/definitions/EncryptedBlockDto"},"fileName":{"type":"string","description":"The name of the attachment file"},"fileRef":{"type":"string","description":"The attachment ref for the attachment file"},"fromEmr":{"type":"boolean","description":"Whether this attachment came from an EMR directly"}},"title":"AttachmentRefDto","description":"An object containing all the reference information for an attachment"},"BookingFileData":{"type":"object","properties":{"fileName":{"type":"string","description":"The file name of the booking file"},"key":{"type":"string","description":"The key for the booking file"},"ref":{"type":"string","description":"The reference for the booking file"}},"title":"BookingFileData"},"Clinician":{"type":"object","properties":{"address":{"$ref":"#/definitions/Address"},"billingNum":{"type":"string"},"clinicianType":{"type":"string","enum":["ADMINISTRATOR","ALLIED_HEALTH_PROFESSIONAL","EXECUTIVE_DIRECTOR","FAMILY_PHYSICIAN","IT_SUPPORT","MEDICAL_STUDENT","MOA","NURSE","NURSE_PRACTITIONER","OTHER","PHYSICIAN_ASSISTANT","RESIDENT","SPECIALIST"]},"firstName":{"type":"string"},"fullNameWithTitle":{"type":"string"},"nameWithTitle":{"type":"string"},"professionalId":{"type":"string"},"searchString":{"type":"string"},"signature":{"type":"string"},"specialty":{"type":"string","enum":["ADDICTIONS","ALLERGY_AND_IMMUNOLOGY","ANAESTHESIA","CARDIOLOGY","CARDIOVASCULAR_SURGERY","CHIROPODY","CHIROPRACTIC","DENTISTRY","DERMATOLOGY","DIETITIAN","EMERGENCY_MEDICINE","ENDOCRINOLOGY","FAMILY","FERTILITY","GASTROENTEROLOGY","GENERAL_SURGERY","GERIATRICS","GYNECOLOGY","HEMATOLOGY","HEPATOLOGY","IMMUNOLOGY","INFECTIOUS_DISEASE","INTERNAL_MEDICINE","MASSAGE_THERAPY","MEDICAL_MICROBIOLOGY","MEDICINE","MIDWIFERY","NATUROPATHY","NEONATOLOGY","NEPHROLOGY","NEUROLOGY","NEUROSURGERY","NUCLEAR_MEDICINE","OBSTETRICS","OCCUPATIONAL_HEALTH","OCCUPATIONAL_THERAPY","ONCOLOGY","OPHTHALMOLOGY","OPTOMETRY","ORTHOPEDICS","OSTEOPATHY","OTOLARYNGOLOGY","PAIN_MANAGEMENT","PALLIATIVE","PALLIATIVE_CARE","PEDIATRICS","PEDIATRIC_CARDIOLOGY","PEDIATRIC_DENTISTRY","PEDIATRIC_PSYCHIATRY","PEDIATRIC_SURGERY","PELVIC_FLOOR_PHYSIOTHERAPY","PHARMACY","PHYSIATRY","PHYSIOTHERAPY","PLASTIC_SURGERY","PODIATRY","PSYCHIATRY","PSYCHOLOGY","PUBLIC_HEALTH","RADIATION_ONCOLOGY","REFUGEE_CARE","RESPIRATORY_THERAPY","RESPIROLOGY","RHEUMATOLOGY","SEXUAL_HEALTH_THERAPY","SLEEP_MEDICINE","SOCIAL_WORK","SPEECH_THERAPY","SPORTS_MEDICINE","STI_CLINIC","SURGERY","TRAVEL_MEDICINE","UROLOGY","VASCULAR_SURGERY"]},"surname":{"type":"string"},"title":{"type":"string"},"userName":{"type":"string"}},"title":"Clinician"},"ClinicianData":{"type":"object","properties":{"address":{"$ref":"#/definitions/AddressData"},"billingNum":{"type":"string","description":"Billing number of clinician"},"clinicianType":{"type":"string","description":"The clinician type"},"firstName":{"type":"string","description":"First name"},"professionalId":{"type":"string","description":"Clinician's professional organization ID"},"signature":{"type":"string","description":"The referring clinician's signed full name"},"surname":{"type":"string","description":"Last name of the clinician"}},"title":"ClinicianData","description":"A clinician object providing more information on the referrer or other clinician stakeholders."},"CustomAnalyticsData":{"type":"object","properties":{"columnFromTemplate1":{"type":"string"},"columnFromTemplate2":{"type":"string"},"columnFromTemplate3":{"type":"string"},"columnFromTemplate4":{"type":"string"},"columnFromTemplateN":{"type":"string"}},"title":"CustomAnalyticsData","description":"An object containing the referral analytic records corresponding to the provided template. The fields in the object are determined by template."},"Demographics":{"type":"object","properties":{"address":{"$ref":"#/definitions/Address"},"address2":{"$ref":"#/definitions/Address"},"approxAgeInDays":{"type":"number","format":"float"},"birthDate":{"type":"string","format":"date"},"clinicDoc":{"$ref":"#/definitions/Clinician"},"customFields":{"type":"object","additionalProperties":{"type":"string"}},"diagnosis":{"type":"string"},"emailConsent":{"type":"string"},"emergencyContact":{"type":"string"},"emergencyContactPhone":{"type":"string"},"familyDoc":{"$ref":"#/definitions/Clinician"},"firstName":{"type":"string"},"hn":{"type":"string"},"hnExpiryDate":{"type":"string","format":"date"},"hnFullString":{"type":"string"},"hnProv":{"type":"string"},"hnVC":{"type":"string"},"language":{"type":"string"},"maidenName":{"type":"string"},"memberStatus":{"type":"string"},"preferredName":{"type":"string"},"secondName":{"type":"string"},"sex":{"type":"string"},"suffix":{"type":"string"},"surname":{"type":"string"},"title":{"type":"string"}},"title":"Demographics","description":"Contains various demographic properties of the patient (e.g. name, address, etc.)"},"EConsultDto":{"type":"object","properties":{"minutes":{"type":"integer","format":"int32","description":"The number of minutes spent processing the eConsult for billing purposes. The time has to be specified as a multiple of 5 minutes up to 25 minutes. The limit is 60 minutes."},"minutesReason":{"type":"string","description":"A required reason for additional time spent after 25 minutes."}},"title":"EConsultDto","description":"An object used to track eConsult data"},"EmailPhi":{"type":"object","properties":{"bookingFiles":{"type":"array","description":"Any files related to the booking of the referral appointment","items":{"$ref":"#/definitions/BookingFileData"}},"ptEmail":{"type":"string","description":"The target email used for the patient"},"ptPreferredName":{"type":"string","description":"The patient's preferred name. Used in the the salutation of the email."}},"title":"EmailPhi","description":"An object that contains information about the patient for notification purposes. Since Ocean is unable to access the patient's email due to client-side encryption, this emailPhi MUST be provided in order for Ocean to notify the patient via email regarding a status change. This emailPhi object must be passed within a container JSON object; see the payload for an example. The content-type must be application/json."},"EncryptedBlockDto":{"type":"object","properties":{"data":{"type":"string","description":"Base 64 encoded byte array containing encrypted data"},"iv":{"type":"string","description":" Base 64 encoded byte array containing initialization vector for the encrypted data"}},"title":"EncryptedBlockDto","description":"An encrypted block of data. For information about encryption/decryption, check [Encrypted Blocks.](#section/Ocean-PHI-Encryption/Encrypted-Blocks)"},"EncryptedNoteData":{"type":"object","properties":{"creationDate":{"type":"string","format":"date-time"},"downloaded":{"type":"boolean"},"downloadedAck":{"type":"boolean"},"finalized":{"type":"boolean"},"flag":{"type":"string","enum":["BLUE","GREEN","NONE","ORANGE","PURPLE","RED","RED_UNDERLINE","YELLOW"]},"modificationDate":{"type":"string","format":"date-time"},"oceanSessionId":{"type":"string"},"referralRef":{"type":"string"}},"title":"EncryptedNoteData"},"FormItemMetadata":{"type":"object","properties":{"hidden":{"type":"boolean","description":"Indicates whether this form item was hidden at the time of the form's completion."}},"title":"FormItemMetadata","description":"Additional contextual information pertaining to a form item answer. The item's answer/value is stored in the completedForms field."},"GeoLoc":{"type":"object","properties":{"coordinates":{"type":"array","items":{"type":"number","format":"float"}},"latitude":{"type":"number","format":"float"},"longitude":{"type":"number","format":"float"},"type":{"type":"string"}},"title":"GeoLoc"},"HealthServiceOfferingData":{"type":"object","properties":{"acceptingReferrals":{"type":"boolean","description":"Whether the referral target accepts eReferrals for this service"},"acceptingSelfReferrals":{"type":"boolean","description":"Whether the referral target accepts self referrals for this service"},"ref":{"type":"string","description":"Reference of the current service offering"},"service":{"type":"string","description":"Service identifier"},"serviceDesc":{"type":"string","description":"Service description"},"waitTime1":{"$ref":"#/definitions/WaitTimeData"},"waitTime2":{"$ref":"#/definitions/WaitTimeData"}},"title":"HealthServiceOfferingData"},"OceanFormFavourite":{"type":"object","properties":{"description":{"type":"string","description":"Description of the favourite."},"formRefs":{"type":"array","description":"Ocean forms included in the favourite.","items":{"$ref":"#/definitions/OceanFormRef"}},"name":{"type":"string","description":"Name of the favourite. Favourites are configured in the Ocean Portal."}},"title":"OceanFormFavourite"},"OceanFormRef":{"type":"object","properties":{"centsPerUse":{"type":"integer","format":"int64","description":"Cost per form use in cents. Most Ocean forms are free. Some forms are licensed and have an associated cost per use."},"ref":{"type":"string","description":"Ocean form reference"},"title":{"type":"string","description":"Descriptive form title"}},"title":"OceanFormRef"},"PatientNote":{"type":"object","properties":{"text":{"type":"string","description":"Formatted progress note suitable for insertion into the patient chart created by the Ocean form. May contain HTML."}},"title":"PatientNote","description":"Object containing progress notes in the update."},"PatientReq":{"type":"object","properties":{"apptReason":{"type":"string","description":"Reason for appointment, generally set by the EMR"},"externalPatientRef":{"type":"string","description":"External patient reference (e.g EMR ID)"},"ptUpdate":{"$ref":"#/definitions/PtUpdate"},"reasonForVisit":{"type":"string","description":"Reason for visit, generally set by the EMR"},"ref":{"type":"string","description":"Ocean patient reference"},"siteNum":{"type":"string","description":"Ocean site number"},"visitType":{"type":"string","description":"Type of visit, generally set by the EMR"}},"title":"PatientReq","description":"This is  what the data structure will look like after decryption. For more details, check [Encrypted Blocks.](#section/Ocean-PHI-Encryption/Encrypted-Blocks)"},"PatientRes":{"type":"object","properties":{"apptReason":{"type":"string","description":"Reason for appointment, generally set by the EMR"},"demog":{"$ref":"#/definitions/Demographics"},"externalPatientRef":{"type":"string","description":"External patient reference (e.g EMR ID)"},"preferredOrFirstName":{"type":"string"},"ptUpdate":{"$ref":"#/definitions/PtUpdate"},"reasonForVisit":{"type":"string","description":"Reason for visit, generally set by the EMR"},"ref":{"type":"string","description":"Ocean patient reference"},"siteNum":{"type":"string","description":"Ocean site number"},"visitType":{"type":"string","description":"Type of visit, generally set by the EMR"}},"title":"PatientRes","description":"This is  what the data structure will look like after decryption. For more details, check [Encrypted Blocks.](#section/Ocean-PHI-Encryption/Encrypted-Blocks)"},"PatientStatusData":{"type":"object","properties":{"externalRef":{"type":"string","description":"External patient reference (e.g. EMR ID)"},"formQueue":{"type":"array","description":"Patient form queue","items":{"$ref":"#/definitions/OceanFormRef"}},"oceanRef":{"type":"string","description":"Ocean patient reference"},"patientStatus":{"type":"string","description":"Ocean patient status","enum":["DOWNLOAD_UPDATES","NO_PENDING_ACTION","UPLOAD_PATIENT_DATA"]}},"title":"PatientStatusData"},"PtUpdate":{"type":"object","properties":{"completedForms":{"type":"object","description":"Object containing form responses in the update. . Has the form formRef1:\n{ formProperty1: answer1, formProperty2: answer2, ...}, formRef2: {...}","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}}},"emrFieldUpdates":{"type":"object","description":"Object containing patient EMR field updates. Check [here](#section/EMR-Field-Updates) for all the available updates that can be used.","additionalProperties":{"type":"string"}},"formMetadata":{"type":"object","description":"Object containing form responses in the update. . Has the form formRef1:\n{ form1ItemRef1: FormItemMetadata, form1ItemRef2: FormItemMetadata, ...}, formRef2: {...}","additionalProperties":{"type":"object","additionalProperties":{"$ref":"#/definitions/FormItemMetadata"}}},"progressNote":{"$ref":"#/definitions/PatientNote"}},"title":"PtUpdate","description":"Various notes, fields, and forms to be updated for the patient."},"ReferralAttachmentData":{"type":"object","properties":{"contentType":{"type":"string"},"encryptedData":{"$ref":"#/definitions/EncryptedBlockDto"}},"title":"ReferralAttachmentData"},"ReferralDataAppointment":{"type":"object","properties":{"apptType":{"type":"string","description":"The appointment type"},"date":{"type":"string","format":"date-time","description":"The date of the appointment"},"hasTime":{"type":"boolean","description":"Whether this appointment has a wait time"},"waitTime":{"type":"string","description":"The typical wait time for this type of appointment","enum":["DAYS_1","DAYS_10_TO_14","DAYS_2","DAYS_3","DAYS_4","DAYS_5","DAYS_6_TO_10","MONTHS_10_TO_12","MONTHS_12_TO_14","MONTHS_14_TO_18","MONTHS_18_TO_24","MONTHS_3_TO_4","MONTHS_4_TO_6","MONTHS_6_TO_8","MONTHS_8_TO_10","WALK_IN","WEEKS_10_TO_12","WEEKS_1_TO_2","WEEKS_2_TO_3","WEEKS_3_TO_4","WEEKS_4_TO_6","WEEKS_6_TO_8","WEEKS_9_TO_10","YEARS_2_PLUS"]},"wtType":{"type":"string","description":"The type of wait time for this appointment","enum":["WAIT_1","WAIT_1A","WAIT_1B","WAIT_2"]}},"title":"ReferralDataAppointment","description":"An object containing information about a referral appointment"},"ReferralDataComment":{"type":"object","properties":{"attachmentRefDtos":{"type":"array","items":{"$ref":"#/definitions/AttachmentRefDto"}},"attachmentSrc":{"type":"string","description":"A description of the sender of the attachment"},"commentDate":{"type":"string","format":"date-time","description":"The date the comment was sent"},"eConsultData":{"$ref":"#/definitions/EConsultDto"},"encryptedMsg":{"$ref":"#/definitions/EncryptedBlockDto"},"message":{"type":"string","description":"Optional plaintext message (should not have PHI)"},"ref":{"type":"string","description":"A reference number for a specific messages in the referral"},"reviewed":{"$ref":"#/definitions/ReviewInfo"},"showForOtherSites":{"type":"boolean","description":"Determines whether other sites should see the comment"},"siteNum":{"type":"string","description":"The site number of the site the message came from"},"tags":{"type":"array","items":{"type":"string","enum":["APPOINTMENT_DECLINED","CONTACT_ATTEMPTED","ORIGINAL_REFERRAL_REDIRECTED","PATIENT_IS_AN_EXISTING_CLIENT","PATIENT_MISSED_APPOINTMENT","PATIENT_OFFERED_EARLIER_DATE","PATIENT_REQUESTED_LATER_DATE","PATIENT_WAS_SEEN","REVIEW_FORM_REVISED","SEVERAL_ATTEMPTS_TO_CONTACT"]}},"targetDesc":{"type":"string","description":"The description of the target of the message"},"targetRtRef":{"type":"string","description":"The ref of the referral target the message was sent to"},"targetSiteNum":{"type":"string","description":"The site number of the referral target the message was sent to"},"targetUserName":{"type":"string","description":"The user name of the target of the message"},"userFullName":{"type":"string","description":"The full name of the user who sent the message"},"userName":{"type":"string","description":"The username of the user who sent the message"}},"title":"ReferralDataComment"},"ReferralDataReq":{"type":"object","properties":{"appointments":{"type":"array","items":{"$ref":"#/definitions/ReferralDataAppointment"}},"assistant":{"$ref":"#/definitions/ClinicianData"},"bookingComments":{"type":"string","description":"Comments and instructions for the patient and the referrer regarding the booking. Caution: do not include the patient's name or other personal health information in this field."},"bookingFileRef":{"$ref":"#/definitions/AttachmentRefDto"},"bookingFileRefs":{"type":"array","description":"A reference to an attachment with booking instructions for the patient and referrer;","items":{"$ref":"#/definitions/AttachmentRefDto"}},"bookingUrl":{"type":"string","description":"The url used when an external system launch is associated with the referral"},"cancellationReason":{"type":"string","description":"A description of why the referral was cancelled"},"communicationType":{"type":"string","description":"The type of communication used for the referral","enum":["E_CONSULT","E_REFERRAL","PROVIDER_MESSAGE"]},"creationDate":{"type":"string","format":"date-time","description":"The date the referral was created"},"description":{"type":"string","description":"A brief description of the referral"},"encryptedPtData":{"$ref":"#/definitions/PatientReq"},"externalConversation":{"type":"array","description":"Messages sent and received within the referral","items":{"$ref":"#/definitions/ReferralDataComment"}},"externalRef":{"type":"string","description":"Referral recipient reference value (e.g. EMR ID)"},"externalServiceId":{"type":"string","description":"Id of the external service this referral is using"},"internalConversation":{"type":"array","description":"Local notes made on the referral","items":{"$ref":"#/definitions/ReferralDataComment"}},"master":{"type":"boolean","description":"Whether this referral is a master referral"},"masterReferralRef":{"type":"string","description":"Reference of the master referral if this is a child referral"},"modificationDate":{"type":"string","format":"date-time","description":"The date the referral was last modified"},"oneTimeKeyEncryptedWithSitePublicKey":{"type":"string","description":"(Base 64 encoded string): the patient's oneTimeKey encrypted with the current site's public key (to provide access to the current API-authenticated site via the site's private key). See the [Sample Code](#tag/Sample-Code) for decryption details."},"oneTimeKeyEncryptedWithSiteSEK":{"description":"(Base 64 encoded string): the patient's oneTimeKey encrypted with the current site's shared encryption key (to provide access to the current API-authenticated site via the site's shared encryption key). See the [Sample Code](#tag/Sample-Code) for decryption details.","$ref":"#/definitions/EncryptedBlockDto"},"oneTimeKeyEncryptedWithTargetPublicKey":{"type":"string","description":"(Base 64 encoded string): the patient's oneTimeKey encrypted with the recipient site's public key (to provide access to the recipient site via the site's private key). See the [Sample Code](#tag/Sample-Code) for decryption details."},"referralRef":{"type":"string","description":"Unique identifier for a referral"},"referralTargetRef":{"type":"string","description":"Unique identifier for a referral target"},"referrer":{"$ref":"#/definitions/ClinicianData"},"scheduledAppointment":{"type":"string","format":"date-time","description":"Appointment Date 1"},"scheduledAppointment2":{"type":"string","format":"date-time","description":"Appointment Date 2"},"sentDate":{"type":"string","format":"date-time","description":"Copy of creationDate"},"services":{"type":"array","description":"Requested Health Services for the referral","items":{"type":"string"}},"sourceExternalRef":{"type":"string","description":"Referral sender reference value (e.g. EMR ID)"},"srcSiteName":{"type":"string","description":"The name of the site who sent the referral"},"srcSiteNum":{"type":"string","description":"The siteNum of the site who sent the referral"},"status":{"type":"string","description":"Current Referral Status","enum":["ACCEPTED","BOOKED","CANCELED","DECLINED","FINISHED","NEW","SEEN"]}},"title":"ReferralDataReq"},"ReferralDataRes":{"type":"object","properties":{"appointments":{"type":"array","items":{"$ref":"#/definitions/ReferralDataAppointment"}},"assistant":{"$ref":"#/definitions/ClinicianData"},"bookingComments":{"type":"string","description":"Comments and instructions for the patient and the referrer regarding the booking. Caution: do not include the patient's name or other personal health information in this field."},"bookingFileRef":{"$ref":"#/definitions/AttachmentRefDto"},"bookingFileRefs":{"type":"array","description":"A reference to an attachment with booking instructions for the patient and referrer;","items":{"$ref":"#/definitions/AttachmentRefDto"}},"bookingUrl":{"type":"string","description":"The url used when an external system launch is associated with the referral"},"cancellationReason":{"type":"string","description":"A description of why the referral was cancelled"},"communicationType":{"type":"string","description":"The type of communication used for the referral","enum":["E_CONSULT","E_REFERRAL","PROVIDER_MESSAGE"]},"creationDate":{"type":"string","format":"date-time","description":"The date the referral was created"},"description":{"type":"string","description":"A brief description of the referral"},"encryptedPtData":{"$ref":"#/definitions/PatientRes"},"externalConversation":{"type":"array","description":"Messages sent and received within the referral","items":{"$ref":"#/definitions/ReferralDataComment"}},"externalRef":{"type":"string","description":"Referral recipient reference value (e.g. EMR ID)"},"externalServiceId":{"type":"string","description":"Id of the external service this referral is using"},"internalConversation":{"type":"array","description":"Local notes made on the referral","items":{"$ref":"#/definitions/ReferralDataComment"}},"master":{"type":"boolean","description":"Whether this referral is a master referral"},"masterReferralRef":{"type":"string","description":"Reference of the master referral if this is a child referral"},"modificationDate":{"type":"string","format":"date-time","description":"The date the referral was last modified"},"oneTimeKeyEncryptedWithSitePublicKey":{"type":"string","description":"(Base 64 encoded string): the patient's oneTimeKey encrypted with the current site's public key (to provide access to the current API-authenticated site via the site's private key). See the [Sample Code](#tag/Sample-Code) for decryption details."},"oneTimeKeyEncryptedWithSiteSEK":{"description":"(Base 64 encoded string): the patient's oneTimeKey encrypted with the current site's shared encryption key (to provide access to the current API-authenticated site via the site's shared encryption key). See the [Sample Code](#tag/Sample-Code) for decryption details.","$ref":"#/definitions/EncryptedBlockDto"},"oneTimeKeyEncryptedWithTargetPublicKey":{"type":"string","description":"(Base 64 encoded string): the patient's oneTimeKey encrypted with the recipient site's public key (to provide access to the recipient site via the site's private key). See the [Sample Code](#tag/Sample-Code) for decryption details."},"referralRef":{"type":"string","description":"Unique identifier for a referral"},"referralTargetRef":{"type":"string","description":"Unique identifier for a referral target"},"referrer":{"$ref":"#/definitions/ClinicianData"},"scheduledAppointment":{"type":"string","format":"date-time","description":"Appointment Date 1"},"scheduledAppointment2":{"type":"string","format":"date-time","description":"Appointment Date 2"},"sentDate":{"type":"string","format":"date-time","description":"Copy of creationDate"},"services":{"type":"array","description":"Requested Health Services for the referral","items":{"type":"string"}},"sourceExternalRef":{"type":"string","description":"Referral sender reference value (e.g. EMR ID)"},"srcSiteName":{"type":"string","description":"The name of the site who sent the referral"},"srcSiteNum":{"type":"string","description":"The siteNum of the site who sent the referral"},"status":{"type":"string","description":"Current Referral Status","enum":["ACCEPTED","BOOKED","CANCELED","DECLINED","FINISHED","NEW","SEEN"]}},"title":"ReferralDataRes"},"ReferralFactData":{"type":"object","properties":{"appointment2Medium":{"type":"string","enum":["HOME_VISIT","IN_PERSON","IN_PERSON_ALT","PHONE","UNSPECIFIED","VIDEO_VISIT"]},"appointmentMedium":{"type":"string","enum":["HOME_VISIT","IN_PERSON","IN_PERSON_ALT","PHONE","UNSPECIFIED","VIDEO_VISIT"]},"authorizingClinicianName":{"type":"string"},"awaitingReply":{"type":"string"},"ax_aboriginalStatus":{"type":"string"},"ax_assessmentOutcome":{"type":"string"},"ax_assessmentOutcomeCommunityProgram":{"type":"string"},"ax_assessmentOutcomeMedicalSpecialist":{"type":"string"},"ax_assessmentOutcomeSelfManagement":{"type":"string"},"ax_bodySite":{"type":"string"},"ax_cause":{"type":"string"},"ax_cm_arthritis":{"type":"string"},"ax_cm_asthma":{"type":"string"},"ax_cm_cvd":{"type":"string"},"ax_cm_dm":{"type":"string"},"ax_cm_htn":{"type":"string"},"ax_cm_osteoporosis":{"type":"string"},"ax_cm_tiaStroke":{"type":"string"},"ax_consultOutcome":{"type":"string"},"ax_decisionToConsult":{"type":"string"},"ax_decisionToTreat":{"type":"string"},"ax_diagnosis":{"type":"string"},"ax_diagnosisAcuity":{"type":"string"},"ax_examType":{"type":"string"},"ax_imagingStatus":{"type":"string"},"ax_imagingType":{"type":"string"},"ax_lab_hb":{"type":"string"},"ax_lab_hdl":{"type":"string"},"ax_lab_ldl":{"type":"string"},"ax_lab_tg":{"type":"string"},"ax_language":{"type":"string"},"ax_languageBarrier":{"type":"string"},"ax_patientPreference":{"type":"string"},"ax_pcpName":{"type":"string"},"ax_preferredCity":{"type":"string"},"ax_preferredClinician":{"type":"string"},"ax_preferredWasChosen":{"type":"string"},"ax_reasonForReferral":{"type":"string"},"ax_receivedReferralComplete":{"type":"string"},"ax_request_mentalHealth":{"type":"string"},"ax_secondaryOutcome":{"type":"string"},"ax_severity1":{"type":"string"},"ax_severity2":{"type":"string"},"ax_socialDeterminants":{"type":"string"},"ax_surgicalCandidate":{"type":"string"},"ax_v_bp":{"type":"string"},"centralIntakeOfferingRef":{"type":"string"},"centralIntakeRef":{"type":"string"},"claimedWaitTime2DaysHigh":{"type":"integer","format":"int32"},"claimedWaitTime2DaysLow":{"type":"integer","format":"int32"},"claimedWaitTimeDaysHigh":{"type":"integer","format":"int32"},"claimedWaitTimeDaysLow":{"type":"integer","format":"int32"},"completedDate":{"type":"string","format":"date-time"},"completionState":{"type":"string"},"creationDate":{"type":"string","format":"date-time"},"currentHealthService":{"type":"string","description":"List of supported Health Services can be found [here](#section/Supported-Health-Services)","enum":["Please refer to link"]},"darcReason":{"type":"string"},"darcWait1aDays":{"type":"integer","format":"int32"},"darcWait1bDays":{"type":"integer","format":"int32"},"dartReason":{"type":"string"},"dartWait2Days":{"type":"integer","format":"int32"},"delegateClinicianType":{"type":"string"},"eConsultAcceptanceDate":{"type":"string","format":"date-time"},"eConsultFirstMessageDate":{"type":"string","format":"date-time"},"eConsultMessageCount":{"type":"integer","format":"int32"},"eConsultOutcome":{"type":"string"},"eConsultOutcomeDate":{"type":"string","format":"date-time"},"eConsultProceedToEReferralReason":{"type":"string"},"externalServiceId":{"type":"string"},"forwardDate":{"type":"string","format":"date-time"},"forwardDateFromAssessmentSite":{"type":"string","format":"date-time"},"inbound":{"type":"boolean"},"initialAssessmentDate":{"type":"string","format":"date-time"},"initialAssessmentOfferingRef":{"type":"string"},"initialAssessmentSite":{"type":"string"},"initialAssessmentSiteNum":{"type":"string"},"initialAssessmentSiteRef":{"type":"string"},"initialContactAttemptDate":{"type":"string","format":"date-time"},"initialForwardDate":{"type":"string","format":"date-time"},"initialHealthService":{"type":"string","description":"List of supported Health Services can be found [here](#section/Supported-Health-Services)","enum":["Please refer to link"]},"initialOrganizationName":{"type":"string"},"initialRecipientName":{"type":"string"},"initialReferralTargetRef":{"type":"string"},"initialSentDate":{"type":"string","format":"date-time"},"integrationName":{"type":"string"},"latestEConsultSentBy":{"type":"string"},"masterReferral":{"type":"boolean"},"modificationDate":{"type":"string","format":"date-time"},"numCIAttachments":{"type":"integer","format":"int32"},"numExternalMessages":{"type":"integer","format":"int32"},"oceanCreationDate":{"type":"string","format":"date-time"},"offeringRef":{"type":"string"},"offeringTitle":{"type":"string"},"patientAge":{"type":"integer","format":"int32"},"patientCity":{"type":"string"},"patientDistanceKm":{"type":"integer","format":"int32"},"patientGender":{"type":"string"},"patientIdHash":{"type":"string"},"patientPostalFirst3Chars":{"type":"string"},"patientProvince":{"type":"string"},"protocol":{"type":"string"},"ptAppointmentReminderEmailed":{"type":"boolean"},"ptNotificationEmailed":{"type":"boolean"},"reasonForDecline":{"type":"string"},"reasonForWaitTimeExclusion":{"type":"string"},"recipientCity":{"type":"string"},"recipientClinicianFirstName":{"type":"string"},"recipientClinicianProfId":{"type":"string"},"recipientClinicianSurname":{"type":"string"},"recipientFaxNumberUsed":{"type":"string"},"recipientName":{"type":"string"},"recipientOrganizationName":{"type":"string"},"recipientPostalCode":{"type":"string"},"recipientPriority":{"type":"string"},"recipientProvince":{"type":"string"},"referralDeleted":{"type":"boolean"},"referralRef":{"type":"string"},"referralSource":{"type":"string"},"referralState":{"type":"string","enum":["ACCEPTED","BOOKED","CANCELED","COMPLETE","DECLINED","INITIAL"]},"referralTargetRef":{"type":"string"},"referredByAnonymousEmrUser":{"type":"boolean"},"referredByUserFullName":{"type":"string"},"referredByUserName":{"type":"string"},"referrerAddressLine1":{"type":"string"},"referrerAddressLine2":{"type":"string"},"referrerCity":{"type":"string"},"referrerClinicianType":{"type":"string"},"referrerFax":{"type":"string"},"referrerName":{"type":"string"},"referrerPhone":{"type":"string"},"referrerPostalCode":{"type":"string"},"referrerProfessionalId":{"type":"string"},"referrerProvince":{"type":"string"},"referrerUrgency":{"type":"string"},"referrerUserName":{"type":"string"},"regionalAuthoritySiteNum":{"type":"string"},"requestedRtRef":{"type":"string"},"requestedRtTitle":{"type":"string"},"resubmissionCount":{"type":"integer","format":"int32"},"scheduledAppointment":{"type":"string","format":"date-time"},"scheduledAppointment2":{"type":"string","format":"date-time"},"schedulingConfirmed":{"type":"boolean"},"schedulingConfirmedBy":{"type":"string"},"secondaryRaSiteNum":{"type":"string"},"seen":{"type":"boolean"},"sentDate":{"type":"string","format":"date-time"},"sentToTestListing":{"type":"boolean"},"siteNum":{"type":"string"},"srcSiteName":{"type":"string"},"srcSiteNum":{"type":"string"},"wait1Days":{"type":"integer","format":"int32"},"wait1aDays":{"type":"integer","format":"int32"},"wait1bDays":{"type":"integer","format":"int32"},"wait2Days":{"type":"integer","format":"int32"}},"title":"ReferralFactData","description":"An object containing all the information about a referral"},"ReferralForwardInfoData":{"type":"object","required":["newOfferingRef","newRtRef"],"properties":{"emailDto":{"$ref":"#/definitions/EmailPhi"},"newOfferingRef":{"type":"string","description":"The ref of the health service offering at the referral target the referral is being forwarded to"},"newPtDistanceKm":{"type":"integer","format":"int32"},"newRtRef":{"type":"string","description":"The ref of the referral target the referral is being forwarded to"}},"title":"ReferralForwardInfoData"},"ReferralInitialInfoDataReq":{"type":"object","properties":{"accessKey":{"type":"string"},"assistant":{"$ref":"#/definitions/ClinicianData"},"encryptedPtData":{"$ref":"#/definitions/PatientReq"},"id":{"type":"string"},"oneTimeKeyEncryptedWithSrcPublicKey":{"type":"string","description":"Key used to decrypt referral info"},"oneTimeKeyEncryptedWithSrcSecretKey":{"type":"object"},"referralAccessKey":{"type":"string","description":"Referral access key"},"referralId":{"type":"string","description":"Referral ID"},"referralSummary":{"type":"string","description":"Summary of the referral"},"referrer":{"$ref":"#/definitions/ClinicianData"},"reqRef":{"type":"string","description":"Request reference"},"rtRef":{"type":"string","description":"Referral target reference"},"srcSiteName":{"type":"string","description":"Name of the source site"},"srcSiteNum":{"type":"string","description":"Source site number"},"submittedFromEmr":{"type":"boolean","description":"Whether this referral was submitted from an EMR"}},"title":"ReferralInitialInfoDataReq"},"ReferralInitialInfoDataRes":{"type":"object","properties":{"accessKey":{"type":"string"},"assistant":{"$ref":"#/definitions/ClinicianData"},"encryptedPtData":{"$ref":"#/definitions/PatientRes"},"id":{"type":"string"},"oneTimeKeyEncryptedWithSrcPublicKey":{"type":"string","description":"Key used to decrypt referral info"},"oneTimeKeyEncryptedWithSrcSecretKey":{"type":"object"},"referralAccessKey":{"type":"string","description":"Referral access key"},"referralId":{"type":"string","description":"Referral ID"},"referralSummary":{"type":"string","description":"Summary of the referral"},"referrer":{"$ref":"#/definitions/ClinicianData"},"reqRef":{"type":"string","description":"Request reference"},"rtRef":{"type":"string","description":"Referral target reference"},"srcSiteName":{"type":"string","description":"Name of the source site"},"srcSiteNum":{"type":"string","description":"Source site number"},"submittedFromEmr":{"type":"boolean","description":"Whether this referral was submitted from an EMR"}},"title":"ReferralInitialInfoDataRes"},"ReferralTargetData":{"type":"object","properties":{"acceptsEReferrals":{"type":"boolean","description":"Whether this referral target accepts eReferrals"},"contactInfo":{"$ref":"#/definitions/AddressData"},"languages":{"type":"array","description":"Languages spoken at the location","items":{"type":"string"}},"offerings":{"type":"array","description":"Health services offered at this referral target","items":{"$ref":"#/definitions/HealthServiceOfferingData"}},"ref":{"type":"string","description":"Unique referral target reference"},"regionalAuthorityApproved":{"type":"boolean","description":"Whether the regional authority has accepted this referral target"},"regionalAuthoritySiteNum":{"type":"string","description":"Site number of the regional authority this referral target belongs to"},"serviceDescription":{"type":"string","description":"A description of the service offered at this referral target"},"testListing":{"type":"boolean","description":"Whether the referral target is in testing"},"title":{"type":"string","description":"Referral target title visible in directory"},"validatedSiteForEReferrals":{"type":"boolean","description":"Whether the referral target has been validated"}},"title":"ReferralTargetData"},"ReferralUpdateData":{"type":"object","properties":{"emailPhi":{"$ref":"#/definitions/EmailPhi"},"externalComment":{"$ref":"#/definitions/ReferralDataComment"},"healthService":{"type":"string"},"referralNote":{"$ref":"#/definitions/EncryptedBlockDto"}},"title":"ReferralUpdateData"},"ReviewInfo":{"type":"object","properties":{"date":{"type":"string","format":"date-time","description":"The date the change was reviewed"},"user":{"type":"string","description":"The user who reviewed the change"}},"title":"ReviewInfo","description":"An object containing information of the reviwer"},"SiteCredentials":{"type":"object","title":"SiteCredentials"},"WaitTimeData":{"type":"object","properties":{"desc":{"type":"string","description":"Description of appointments and wait times"},"highDayEstimate":{"type":"integer","format":"int32","description":"Number of days (high estimate)"},"lowDayEstimate":{"type":"integer","format":"int32","description":"Number of days (low estimate)"}},"title":"WaitTimeData"}},"x-tagGroups":[{"name":"Patient Engagement","tags":["Patients","Forms"]},{"name":"Referrals","tags":["Referrals","Referral Targets"]},{"name":"Miscellaneous","tags":["Session","Formats and Terminology","Event API","Sample Code"]}]}
